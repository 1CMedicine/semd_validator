<?xml version="1.0" encoding="UTF-8"?>
<xsl:transform xmlns:address="urn:hl7-ru:address"
                xmlns:error="https://doi.org/10.5281/zenodo.1495494#error"
                xmlns:fias="urn:hl7-ru:fias"
                xmlns:identity="urn:hl7-ru:identity"
                xmlns:medService="urn:hl7-ru:medService"
                xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                xmlns:schxslt="https://doi.org/10.5281/zenodo.1495494"
                xmlns:schxslt-api="https://doi.org/10.5281/zenodo.1495494#api"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="2.0">
   <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/"
                     xmlns:dct="http://purl.org/dc/terms/"
                     xmlns:skos="http://www.w3.org/2004/02/skos/core#">
      <dct:creator>
         <dct:Agent>
            <skos:prefLabel>SchXslt/1.9.1 SAXON/HE 11.4</skos:prefLabel>
            <schxslt.compile.typed-variables xmlns="https://doi.org/10.5281/zenodo.1495494#">true</schxslt.compile.typed-variables>
         </dct:Agent>
      </dct:creator>
      <dct:created>2023-10-21T22:21:34.366294116+08:00</dct:created>
   </rdf:Description>
   <xsl:output indent="yes"/>
   <xsl:template match="root()">
      <xsl:variable name="metadata" as="element()?">
         <svrl:metadata xmlns:dct="http://purl.org/dc/terms/"
                         xmlns:skos="http://www.w3.org/2004/02/skos/core#"
                         xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
            <dct:creator>
               <dct:Agent>
                  <skos:prefLabel>
                     <xsl:variable name="prefix"
                                    as="xs:string?"
                                    select="if (doc-available('')) then in-scope-prefixes(document('')/*[1])[namespace-uri-for-prefix(., document('')/*[1]) eq 'http://www.w3.org/1999/XSL/Transform'][1] else ()"/>
                     <xsl:choose>
                        <xsl:when test="empty($prefix)">Unknown</xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of separator="/"
                                          select="(system-property(concat($prefix, ':product-name')), system-property(concat($prefix,':product-version')))"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </skos:prefLabel>
               </dct:Agent>
            </dct:creator>
            <dct:created>
               <xsl:value-of select="current-dateTime()"/>
            </dct:created>
            <dct:source>
               <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/">
                  <dct:creator>
                     <dct:Agent>
                        <skos:prefLabel>SchXslt/1.9.1 SAXON/HE 11.4</skos:prefLabel>
                        <schxslt.compile.typed-variables xmlns="https://doi.org/10.5281/zenodo.1495494#">true</schxslt.compile.typed-variables>
                     </dct:Agent>
                  </dct:creator>
                  <dct:created>2023-10-21T22:21:34.366294116+08:00</dct:created>
               </rdf:Description>
            </dct:source>
         </svrl:metadata>
      </xsl:variable>
      <xsl:variable name="report" as="element(schxslt:report)">
         <schxslt:report>
            <xsl:call-template name="d13e13"/>
         </schxslt:report>
      </xsl:variable>
      <xsl:variable name="schxslt:report" as="node()*">
         <xsl:sequence select="$metadata"/>
         <xsl:for-each select="$report/schxslt:document">
            <xsl:for-each select="schxslt:pattern">
               <xsl:sequence select="node()"/>
               <xsl:sequence select="../schxslt:rule[@pattern = current()/@id]/node()"/>
            </xsl:for-each>
         </xsl:for-each>
      </xsl:variable>
      <svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
         <svrl:ns-prefix-in-attribute-values prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
         <svrl:ns-prefix-in-attribute-values prefix="identity" uri="urn:hl7-ru:identity"/>
         <svrl:ns-prefix-in-attribute-values prefix="address" uri="urn:hl7-ru:address"/>
         <svrl:ns-prefix-in-attribute-values prefix="medService" uri="urn:hl7-ru:medService"/>
         <svrl:ns-prefix-in-attribute-values prefix="fias" uri="urn:hl7-ru:fias"/>
         <xsl:sequence select="$schxslt:report"/>
      </svrl:schematron-output>
   </xsl:template>
   <xsl:template match="text() | @*" mode="#all" priority="-10"/>
   <xsl:template match="/" mode="#all" priority="-10">
      <xsl:apply-templates mode="#current" select="node()"/>
   </xsl:template>
   <xsl:template match="*" mode="#all" priority="-10">
      <xsl:apply-templates mode="#current" select="@*"/>
      <xsl:apply-templates mode="#current" select="node()"/>
   </xsl:template>
   <xsl:template name="d13e13">
      <schxslt:document>
         <schxslt:pattern id="d13e13">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e88">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e100">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e115">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e127">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e145">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e171">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e180">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e208">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e220">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e229">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e238">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e264">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e276">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e294">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e306">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e318">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e352">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e371">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e383">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e392">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e417">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e442">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e451">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e464">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e473">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e482">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e494">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e509">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e534">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e547">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e559">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e587">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e612">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e624">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e649">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e659">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e671">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e683">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e692">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e710">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e731">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e750">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e762">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e774">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e786">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e807">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e819">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e829">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e838">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e875">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e890">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e918">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e943">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e953">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e965">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e974">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e983">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e995">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1020">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1046">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1055">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1067">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1076">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1088">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1113">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1142">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1154">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1179">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1188">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1200">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1212">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1222">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1240">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1252">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1270">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1282">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1294">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1307">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1328">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1346">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1364">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1376">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1388">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1401">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1413">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1425">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1453">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1465">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1490">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1500">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1512">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1524">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1533">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1561">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1579">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1598">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1616">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1628">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1640">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1652">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1664">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1677">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1695">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1723">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1735">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1760">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1769">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1782">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1794">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1803">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1818">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1827">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1858">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1877">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1892">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1917">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1945">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1957">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1982">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e1992">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2004">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2016">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2025">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2043">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2055">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2074">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2086">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2098">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2110">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2135">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2153">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2166">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2184">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2212">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2224">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2249">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2258">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2271">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2283">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2292">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2304">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2316">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2341">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2360">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2372">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2390">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2418">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2430">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2455">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2465">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2477">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2489">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2498">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2510">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2522">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2538">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2550">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2562">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2574">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2586">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2601">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2617">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2629">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2641">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2659">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2668">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2677">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2709">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2727">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2742">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2767">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2795">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2807">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2833">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2842">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2854">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2866">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2875">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2893">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2906">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2924">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2936">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2948">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2960">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e2985">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3004">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3016">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3034">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3062">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3074">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3099">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3109">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3121">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3133">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3142">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3157">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3178">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3204">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3229">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3254">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3275">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3287">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3296">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3306">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3315">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3327">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3339">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3348">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3357">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3379">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3391">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3400">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3412">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3427">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3436">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3462">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3474">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3499">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3508">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3520">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3532">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3542">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3554">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3579">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3604">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3619">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3631">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3644">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3669">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3694">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3719">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3731">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3756">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3775">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3793">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3818">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3843">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3858">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3870">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3883">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3895">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3907">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e3919">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4020">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4045">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4058">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4070">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4082">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4103">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4128">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4156">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4172">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4197">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4209">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4237">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4262">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4274">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4287">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4299">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4320">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4345">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4373">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4385">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4404">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4429">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4441">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4453">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4465">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4486">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4512">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4524">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4536">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4548">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4579">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4588">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4598">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4610">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4622">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4643">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4658">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4670">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4696">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4714">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4726">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4744">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4756">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4768">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4781">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4796">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4817">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4832">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4844">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4856">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4866">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4878">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4896">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4921">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4933">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4945">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4958">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e4995">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5020">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5032">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5044">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5056">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5078">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5103">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5118">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5130">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5167">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5192">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5205">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5214">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5223">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5235">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5263">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5278">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5300">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5325">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5340">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5355">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5376">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5401">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5430">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5445">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5473">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5498">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5507">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5516">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5538">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5566">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5581">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5602">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5627">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5655">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5671">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5699">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5724">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5736">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5764">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5779">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5801">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5826">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5854">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5866">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5887">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5912">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5941">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5953">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5974">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e5999">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6027">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6039">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6061">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6086">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6098">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6110">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6131">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6156">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6185">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6197">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6234">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6259">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6271">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6283">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6296">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6317">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6342">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6370">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6382">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6403">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6429">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6444">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6456">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6477">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6502">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6517">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6530">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6551">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6576">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6591">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6603">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6621">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6647">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6659">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6671">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6683">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6708">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6733">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6746">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6758">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6770">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6801">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6810">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6819">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6832">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6844">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6865">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6880">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6892">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6917">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6936">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6948">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6966">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6978">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e6990">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7002">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7018">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7039">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7054">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7066">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7078">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7087">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7100">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7121">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7146">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7161">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7173">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7194">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7220">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7232">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7244">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7256">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7315">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7340">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7353">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7365">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7393">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7408">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7429">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7454">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7480">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7495">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7510">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7531">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7556">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7581">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7597">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7612">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7633">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7658">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7686">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7701">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7723">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7748">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7776">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7791">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7819">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7844">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7857">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7885">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7900">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7921">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7946">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7961">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7977">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e7998">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8023">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8051">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8066">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8087">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8113">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8141">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8156">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8177">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8202">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8230">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8246">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8267">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8292">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8320">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8335">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8356">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8382">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8397">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8409">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8430">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8455">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8467">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8480">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8492">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8523">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8532">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8541">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8553">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8566">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8587">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8602">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8614">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8639">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8657">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8670">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8688">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8700">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8712">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8724">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8739">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8761">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8776">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8788">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8800">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8809">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8821">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8843">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8868">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8880">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8892">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8904">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8935">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8961">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8973">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e8985">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9000">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9025">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9050">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9063">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9091">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9106">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9127">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9142">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9154">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9167">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9176">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9188">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9209">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9234">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9246">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9259">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9271">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9302">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9327">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9339">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9351">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9364">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9376">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9391">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9416">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9441">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9453">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9482">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9497">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9518">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9533">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9545">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9557">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9567">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9579">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9600">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9625">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9637">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9649">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9662">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9690">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9715">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9727">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9739">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9751">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9764">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9779">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9800">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9815">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9827">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9839">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9849">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9861">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9882">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9907">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9919">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9931">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9944">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9972">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e9997">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10009">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10021">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10036">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10058">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10073">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10085">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10097">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10106">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10118">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10140">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10165">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10177">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10189">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10201">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10229">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10239">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10251">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10263">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10278">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10299">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10314">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10327">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10339">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10348">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10360">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10378">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10403">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10416">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10428">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10440">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10461">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10486">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10498">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10511">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10523">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10551">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10576">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10588">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10600">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10613">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10628">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10640">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10649">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10658">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10673">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10695">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10710">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10722">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10734">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10743">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10755">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10777">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10802">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10814">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10826">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10838">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10866">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10879">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10891">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10906">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10921">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10936">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10951">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e10967">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11001">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11016">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11028">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11053">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11068">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11097">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11112">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11133">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11158">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11183">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11198">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11214">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11235">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11260">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11275">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11287">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11302">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11315">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11333">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11348">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11360">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11388">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11403">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11416">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11444">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11456">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11477">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11502">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11514">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11527">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11539">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11573">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11598">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11610">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11631">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11660">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11672">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11693">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11708">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11720">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11745">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11764">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11776">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11794">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11806">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11818">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11830">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11846">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11874">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11892">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11917">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11926">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11935">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11964">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e11979">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12004">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12029">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12041">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12069">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12082">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12100">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12125">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12137">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12149">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12161">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12180">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12205">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12217">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12229">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12241">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12259">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12285">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12297">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12309">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12321">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12339">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12364">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12377">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12389">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12401">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12419">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12444">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12456">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12469">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12481">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12506">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12531">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12543">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12555">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12568">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12586">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12611">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12623">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12635">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12647">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12666">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12691">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12703">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12715">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12727">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12748">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12774">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12786">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12798">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12810">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12831">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12856">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12872">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12884">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12902">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12927">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12939">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12951">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12964">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e12985">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13010">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13022">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13034">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13046">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13072">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13097">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13112">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13127">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13152">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13173">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13186">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13198">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13210">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13222">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13243">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13268">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13281">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13293">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13305">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13342">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13370">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13382">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13395">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13410">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13431">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13456">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13471">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13486">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13508">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13533">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13548">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13563">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13584">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13609">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13638">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13653">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13674">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13689">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13701">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13713">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13723">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13732">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13741">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13750">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13759">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13768">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13778">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13787">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13796">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13805">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13814">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13823">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13833">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13848">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13857">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13866">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13887">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13896">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13911">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13923">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13943">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13952">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13961">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13971">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13980">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13989">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e13998">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14010">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14019">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14029">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14038">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14047">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14059">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14068">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14077">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <schxslt:pattern id="d13e14089">
            <xsl:if test="exists(base-uri(root()))">
               <xsl:attribute name="documents" select="base-uri(root())"/>
            </xsl:if>
            <xsl:for-each select="root()">
               <svrl:active-pattern xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="documents" select="base-uri(.)"/>
               </svrl:active-pattern>
            </xsl:for-each>
         </schxslt:pattern>
         <xsl:apply-templates mode="d13e13" select="root()"/>
      </schxslt:document>
   </xsl:template>
   <xsl:template match="ClinicalDocument" priority="827" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13']">
            <schxslt:rule pattern="d13e13">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(realmCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(realmCode) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент realmCode (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(typeId) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(typeId) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один [1..1]
                элемент typeId (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(templateId) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(templateId) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент templateId (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = '.51']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = '.51']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument ОБЯЗАН содержать один [1..1] элемент id (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один [1..1]
                элемент code (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один [1..1]
                элемент title (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ДОЛЖЕН содержать один
                [1..1] элемент effectiveTime (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(confidentialityCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(confidentialityCode) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать
                один [1..1] элемент confidentialityCode (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(languageCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(languageCode) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент languageCode (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(setId) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(setId) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один [1..1]
                элемент setId (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(versionNumber) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(versionNumber) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент versionNumber (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(recordTarget) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(recordTarget) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент recordTarget (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(author) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(author) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один [1..1]
                элемент author (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(custodian) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(custodian) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент custodian (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один [1..1] элемент informationRecipient
                (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument МОЖЕТ содержать произвольное количество [0..*] элементов
                informationRecipient (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(legalAuthenticator) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(legalAuthenticator) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать
                один [1..1] элемент legalAuthenticator (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(participant[@typeCode = 'IND']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(participant[@typeCode = 'IND']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument
                МОЖЕТ содержать не более одного [0..1] элемента participant (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(documentationOf) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(documentationOf) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument МОЖЕТ содержать
                не более одного [0..1] элемента documentationOf (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(componentOf) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(componentOf) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент componentOf (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component) = 1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument ОБЯЗАН содержать один
                [1..1] элемент component (ClinicalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/realmCode" priority="826" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e88']">
            <schxslt:rule pattern="d13e88">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/realmCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/realmCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e88">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/realmCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/realmCode не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RU')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RU'</xsl:attribute>
                     <svrl:text>Элемент realmCode обязан содержать один атрибут @code со
                значением "RU"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e88')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/typeId" priority="825" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e100']">
            <schxslt:rule pattern="d13e100">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/typeId" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/typeId</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e100">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/typeId</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/typeId не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '2.16.840.1.113883.1.3')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '2.16.840.1.113883.1.3'</xsl:attribute>
                     <svrl:text>Элемент typeId обязан содержать один
                атрибут @root со значением "2.16.840.1.113883.1.3"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension = 'POCD_MT000040')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension = 'POCD_MT000040'</xsl:attribute>
                     <svrl:text>Элемент typeId обязан содержать один атрибут
                @extension со значением "POCD_MT000040"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e100')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/templateId" priority="824" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e115']">
            <schxslt:rule pattern="d13e115">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/templateId" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/templateId</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e115">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/templateId</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/templateId не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.15.30.2')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.15.30.2'</xsl:attribute>
                     <svrl:text>Элемент templateId обязан содержать
                один атрибут @root со значением "1.2.643.5.1.13.13.15.30.2"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e115')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/id[substring(@root, string-length(@root) - 2) = '.51']"
                  priority="823"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e127']">
            <schxslt:rule pattern="d13e127">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/id[substring(@root, string-length(@root) - 2) = '.51']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/id[substring(@root, string-length(@root) - 2) = '.51']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e127">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/id[substring(@root, string-length(@root) - 2) = '.51']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/id[substring(@root,
                string-length(@root) - 2)='.51'] не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e127')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/code" priority="822" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e145']">
            <schxslt:rule pattern="d13e145">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e145">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/code не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '30')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '30'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "30"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.1079')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.1079'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.1079"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e145')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/code" priority="821" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e171']">
            <schxslt:rule pattern="d13e171">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e171">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(translation)=1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation)=1</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/code ОБЯЗАН содержать один [1..1] элемент translation</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e171')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/code/translation"
                  priority="820"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e180']">
            <schxslt:rule pattern="d13e180">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/code/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/code/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e180">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/code/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/code/translation не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code!= '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code!= ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать
                один атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code = '200')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '200'</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @code со значением "200"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1520')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1520'</xsl:attribute>
                     <svrl:text>Элемент
                translation обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1520"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать
                один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e180')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/title" priority="819" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e208']">
            <schxslt:rule pattern="d13e208">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e208">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/title не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e208')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/effectiveTime[not(@nullFlavor)]"
                  priority="818"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e220']">
            <schxslt:rule pattern="d13e220">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/effectiveTime[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e220">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime должен содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e220')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/effectiveTime[@nullFlavor]"
                  priority="817"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e229']">
            <schxslt:rule pattern="d13e229">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/effectiveTime[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/effectiveTime[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e229">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/effectiveTime[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e229')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/confidentialityCode"
                  priority="816"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e238']">
            <schxslt:rule pattern="d13e238">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/confidentialityCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/confidentialityCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e238">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/confidentialityCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/confidentialityCode не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.285', '1.2.643.5.1.13.2.1.1.1504.9', '2.16.840.1.113883.2.35.10.9', '1.2.643.5.1.13.13.11.1116'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.285', '1.2.643.5.1.13.2.1.1.1504.9', '2.16.840.1.113883.2.35.10.9', '1.2.643.5.1.13.13.11.1116']</xsl:attribute>
                     <svrl:text>Элемент confidentialityCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.285"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент confidentialityCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент confidentialityCode обязан содержать один атрибут
                @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент confidentialityCode обязан содержать
                один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент confidentialityCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e238')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/languageCode" priority="815" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e264']">
            <schxslt:rule pattern="d13e264">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/languageCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/languageCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e264">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/languageCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/languageCode не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'ru-RU')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'ru-RU'</xsl:attribute>
                     <svrl:text>Элемент languageCode обязан содержать один атрибут @code
                со значением "ru-RU"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e264')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/setId" priority="814" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e276']">
            <schxslt:rule pattern="d13e276">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/setId" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/setId</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e276">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/setId</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/setId не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент setId обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.50</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.50$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.50$')</xsl:attribute>
                     <svrl:text>Элемент setId обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.50</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент setId обязан содержать один атрибут @extension с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e276')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/versionNumber" priority="813" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e294']">
            <schxslt:rule pattern="d13e294">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/versionNumber" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/versionNumber</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e294">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/versionNumber</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/versionNumber не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент versionNumber обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e294')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget" priority="812" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e306']">
            <schxslt:rule pattern="d13e306">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e306">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/recordTarget не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(patientRole) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(patientRole) = 1</xsl:attribute>
                     <svrl:text>Элемент recordTarget ОБЯЗАН содержать один [1..1]
                элемент patientRole (ClinicalDocument/recordTarget) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e306')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole"
                  priority="811"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e318']">
            <schxslt:rule pattern="d13e318">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e318">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/recordTarget/patientRole не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = '.10']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = '.10']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                patientRole ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент patientRole ДОЛЖЕН содержать один [1..1] элемент
                id (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IdentityDoc) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IdentityDoc) = 1</xsl:attribute>
                     <svrl:text>Элемент patientRole ДОЛЖЕН содержать один
                [1..1] элемент identity:IdentityDoc (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:InsurancePolicy) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:InsurancePolicy) = 1</xsl:attribute>
                     <svrl:text>Элемент patientRole ДОЛЖЕН содержать
                один [1..1] элемент identity:InsurancePolicy
                (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [1, 2])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [1, 2]</xsl:attribute>
                     <svrl:text>Элемент patientRole ДОЛЖЕН содержать от одного до
                двух [1..2] элементов addr (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент patientRole МОЖЕТ содержать произвольное
                количество [0..*] элементов telecom (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(patient) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(patient) = 1</xsl:attribute>
                     <svrl:text>Элемент patientRole ОБЯЗАН содержать один [1..1]
                элемент patient (ClinicalDocument/recordTarget/patientRole) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(providerOrganization) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(providerOrganization) = 1</xsl:attribute>
                     <svrl:text>Элемент patientRole ОБЯЗАН содержать один
                [1..1] элемент providerOrganization (ClinicalDocument/recordTarget/patientRole)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e318')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/id[substring(@root, string-length(@root) - 2) = '.10']"
                  priority="810"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e352']">
            <schxslt:rule pattern="d13e352">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/id[substring(@root, string-length(@root) - 2) = '.10']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/id[substring(@root, string-length(@root) - 2) = '.10']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e352">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/id[substring(@root, string-length(@root) - 2) = '.10']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/id[substring(@root, string-length(@root) -
                2)='.10'] не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.10</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.10$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.10$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.10</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e352')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/id[2][not(@nullFlavor)]"
                  priority="809"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e371']">
            <schxslt:rule pattern="d13e371">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e371">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.100.3')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.100.3'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root со
                значением "1.2.643.100.3"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e371')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/id[2][@nullFlavor]"
                  priority="808"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e383']">
            <schxslt:rule pattern="d13e383">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e383">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e383')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc[not(@nullFlavor)]"
                  priority="807"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e392']">
            <schxslt:rule pattern="d13e392">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e392">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(identity:IdentityCardType) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IdentityCardType) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ОБЯЗАН
                содержать один [1..1] элемент identity:IdentityCardType
                (ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Series) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Series) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ДОЛЖЕН содержать
                один [1..1] элемент identity:Series
                (ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Number) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Number) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ОБЯЗАН содержать
                один [1..1] элемент identity:Number
                (ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueOrgName) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueOrgName) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ДОЛЖЕН
                содержать один [1..1] элемент identity:IssueOrgName
                (ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueOrgCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueOrgCode) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ДОЛЖЕН
                содержать один [1..1] элемент identity:IssueOrgCode
                (ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueDate) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueDate) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ОБЯЗАН
                содержать один [1..1] элемент identity:IssueDate
                (ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e392')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IdentityCardType"
                  priority="806"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e417']">
            <schxslt:rule pattern="d13e417">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IdentityCardType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IdentityCardType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e417">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IdentityCardType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IdentityCardType
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.48', '1.2.643.5.1.13.13.11.1011', '1.2.643.5.1.13.2.1.1.736'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.48', '1.2.643.5.1.13.13.11.1011', '1.2.643.5.1.13.2.1.1.736']</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать один атрибут @codeSystem со
                значением "1.2.643.5.1.13.13.99.2.48"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать
                один атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e417')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Series[not(@nullFlavor)]"
                  priority="805"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e442']">
            <schxslt:rule pattern="d13e442">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Series[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e442">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Series должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e442')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Number"
                  priority="804"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e451']">
            <schxslt:rule pattern="d13e451">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Number" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Number</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e451">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Number</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:Number не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Number должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e451')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]"
                  priority="803"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e464']">
            <schxslt:rule pattern="d13e464">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e464">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueOrgName должен содержать не пустое
                текстовое наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e464')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]"
                  priority="802"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e473']">
            <schxslt:rule pattern="d13e473">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e473">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueOrgCode должен содержать не пустое
                текстовое наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e473')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueDate"
                  priority="801"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e482']">
            <schxslt:rule pattern="d13e482">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueDate" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueDate</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e482">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueDate</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/identity:IdentityDoc/identity:IssueDate не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueDate обязан содержать один атрибут
                @value с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e482')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy[not(@nullFlavor)]"
                  priority="800"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e494']">
            <schxslt:rule pattern="d13e494">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e494">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(identity:InsurancePolicyType) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:InsurancePolicyType) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicy
                ОБЯЗАН содержать один [1..1] элемент identity:InsurancePolicyType
                (ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Series) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Series) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicy МОЖЕТ
                содержать не более одного [0..1] элемента identity:Series
                (ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Number) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Number) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicy ОБЯЗАН
                содержать один [1..1] элемент identity:Number
                (ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e494')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:InsurancePolicyType"
                  priority="799"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e509']">
            <schxslt:rule pattern="d13e509">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:InsurancePolicyType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:InsurancePolicyType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e509">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:InsurancePolicyType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:InsurancePolicyType
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1035')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1035'</xsl:attribute>
                     <svrl:text>Элемент
                identity:InsurancePolicyType обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1035"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType обязан
                содержать один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType обязан содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType обязан
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType обязан содержать
                один атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e509')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Series"
                  priority="798"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e534']">
            <schxslt:rule pattern="d13e534">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Series" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Series</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e534">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Series</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Series
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Series должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e534')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Number"
                  priority="797"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e547']">
            <schxslt:rule pattern="d13e547">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Number" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Number</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e547">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Number</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/identity:InsurancePolicy/identity:Number
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Number должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e547')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr[not(@nullFlavor)]"
                  priority="796"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e559']">
            <schxslt:rule pattern="d13e559">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e559">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:Type) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:Type) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1] элемент
                address:Type (ClinicalDocument/recordTarget/patientRole/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine (ClinicalDocument/recordTarget/patientRole/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode (ClinicalDocument/recordTarget/patientRole/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode (ClinicalDocument/recordTarget/patientRole/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address (ClinicalDocument/recordTarget/patientRole/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e559')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/address:Type"
                  priority="795"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e587']">
            <schxslt:rule pattern="d13e587">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/address:Type" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/address:Type</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e587">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/address:Type</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/addr/address:Type не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1504', '1.2.643.5.1.13.13.11.1415', '1.2.643.5.1.13.13.99.2.241'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1504', '1.2.643.5.1.13.13.11.1415', '1.2.643.5.1.13.13.99.2.241']</xsl:attribute>
                     <svrl:text>Элемент address:Type обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1504"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:Type обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:Type обязан содержать один атрибут @code с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:Type обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:Type обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e587')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/streetAddressLine"
                  priority="794"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e612']">
            <schxslt:rule pattern="d13e612">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e612">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/addr/streetAddressLine не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e612')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/address:stateCode"
                  priority="793"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e624']">
            <schxslt:rule pattern="d13e624">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e624">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/addr/address:stateCode не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e624')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/postalCode[not(@nullFlavor)]"
                  priority="792"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e649']">
            <schxslt:rule pattern="d13e649">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e649">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e649')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/fias:Address[not(@nullFlavor)]"
                  priority="791"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e659']">
            <schxslt:rule pattern="d13e659">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e659">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID (ClinicalDocument/recordTarget/patientRole/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/recordTarget/patientRole/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e659')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:AOGUID"
                  priority="790"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e671']">
            <schxslt:rule pattern="d13e671">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e671">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:AOGUID не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e671')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="789"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e683']">
            <schxslt:rule pattern="d13e683">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e683">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e683')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/telecom"
                  priority="788"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e692']">
            <schxslt:rule pattern="d13e692">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e692">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/recordTarget/patientRole/telecom не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e692')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient"
                  priority="787"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e710']">
            <schxslt:rule pattern="d13e710">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e710">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/recordTarget/patientRole/patient не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент patient ОБЯЗАН содержать один [1..1] элемент name
                (ClinicalDocument/recordTarget/patientRole/patient) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(administrativeGenderCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(administrativeGenderCode) = 1</xsl:attribute>
                     <svrl:text>Элемент patient ДОЛЖЕН содержать один
                [1..1] элемент administrativeGenderCode
                (ClinicalDocument/recordTarget/patientRole/patient) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(birthTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(birthTime) = 1</xsl:attribute>
                     <svrl:text>Элемент patient ДОЛЖЕН содержать один [1..1] элемент
                birthTime (ClinicalDocument/recordTarget/patientRole/patient) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(guardian) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(guardian) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент patient МОЖЕТ содержать не более одного
                [0..1] элемента guardian (ClinicalDocument/recordTarget/patientRole/patient)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e710')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/name"
                  priority="786"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e731']">
            <schxslt:rule pattern="d13e731">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e731">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/name не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family (ClinicalDocument/recordTarget/patientRole/patient/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/recordTarget/patientRole/patient/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/recordTarget/patientRole/patient/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e731')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/name/family"
                  priority="785"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e750']">
            <schxslt:rule pattern="d13e750">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e750">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/name/family не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e750')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/name/given"
                  priority="784"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e762']">
            <schxslt:rule pattern="d13e762">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e762">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/name/given не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e762')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/name/identity:Patronymic"
                  priority="783"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e774']">
            <schxslt:rule pattern="d13e774">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e774">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/name/identity:Patronymic не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e774')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[not(@nullFlavor)]"
                  priority="782"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e786']">
            <schxslt:rule pattern="d13e786">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e786">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1040', '1.2.643.5.1.13.2.1.1.156'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1040', '1.2.643.5.1.13.2.1.1.156']</xsl:attribute>
                     <svrl:text>Элемент administrativeGenderCode должен содержать один атрибут @codeSystem со
                значением "1.2.643.5.1.13.13.11.1040"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент administrativeGenderCode должен содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент administrativeGenderCode должен содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент administrativeGenderCode должен
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент administrativeGenderCode должен содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e786')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[@nullFlavor]"
                  priority="781"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e807']">
            <schxslt:rule pattern="d13e807">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e807">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/administrativeGenderCode[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e807')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/birthTime[not(@nullFlavor)]"
                  priority="780"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e819']">
            <schxslt:rule pattern="d13e819">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/birthTime[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/birthTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e819">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/birthTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент birthTime должен содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e819')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/birthTime[@nullFlavor]"
                  priority="779"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e829']">
            <schxslt:rule pattern="d13e829">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/birthTime[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/birthTime[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e829">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/birthTime[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e829')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian"
                  priority="778"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e838']">
            <schxslt:rule pattern="d13e838">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e838">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'GUARD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'GUARD'</xsl:attribute>
                     <svrl:text>Элемент guardian обязан содержать один атрибут
                @classCode со значением "GUARD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[@root = '1.2.643.100.3']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[@root = '1.2.643.100.3']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ
                содержать не более одного [0..1] элемента id
                (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IdentityDoc) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IdentityDoc) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать не
                более одного [0..1] элемента identity:IdentityDoc
                (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:AuthorityDoc) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:AuthorityDoc) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать не
                более одного [0..1] элемента identity:AuthorityDoc
                (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать не более одного
                [0..1] элемента code (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать не более одного
                [0..1] элемента addr (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать произвольное
                количество [0..*] элементов telecom
                (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(guardianPerson) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(guardianPerson) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать не более
                одного [0..1] элемента guardianPerson
                (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(guardianOrganization) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(guardianOrganization) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardian МОЖЕТ содержать не
                более одного [0..1] элемента guardianOrganization
                (ClinicalDocument/recordTarget/patientRole/patient/guardian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e838')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/id[@root = '1.2.643.100.3']"
                  priority="777"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e875']">
            <schxslt:rule pattern="d13e875">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/id[@root = '1.2.643.100.3']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/id[@root = '1.2.643.100.3']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e875">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/id[@root = '1.2.643.100.3']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/id[@root='1.2.643.100.3']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '1.2.643.100.3')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.100.3'</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root со
                значением "1.2.643.100.3"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e875')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc"
                  priority="776"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e890']">
            <schxslt:rule pattern="d13e890">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e890">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(identity:IdentityCardType) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IdentityCardType) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ОБЯЗАН
                содержать один [1..1] элемент identity:IdentityCardType
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Series) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Series) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ДОЛЖЕН содержать
                один [1..1] элемент identity:Series
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Number) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Number) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ОБЯЗАН содержать
                один [1..1] элемент identity:Number
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueOrgName) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueOrgName) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ДОЛЖЕН
                содержать один [1..1] элемент identity:IssueOrgName
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueOrgCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueOrgCode) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ДОЛЖЕН
                содержать один [1..1] элемент identity:IssueOrgCode
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueDate) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueDate) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDoc ОБЯЗАН
                содержать один [1..1] элемент identity:IssueDate
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e890')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IdentityCardType"
                  priority="775"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e918']">
            <schxslt:rule pattern="d13e918">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IdentityCardType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IdentityCardType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e918">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IdentityCardType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IdentityCardType
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.48', '1.2.643.5.1.13.13.11.1011', '1.2.643.5.1.13.2.1.1.736'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.48', '1.2.643.5.1.13.13.11.1011', '1.2.643.5.1.13.2.1.1.736']</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать один атрибут @codeSystem со
                значением "1.2.643.5.1.13.13.99.2.48"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать
                один атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e918')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Series[not(@nullFlavor)]"
                  priority="774"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e943']">
            <schxslt:rule pattern="d13e943">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Series[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e943">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Series должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e943')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Number"
                  priority="773"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e953']">
            <schxslt:rule pattern="d13e953">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Number" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Number</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e953">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Number</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:Number
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Number должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e953')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]"
                  priority="772"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e965']">
            <schxslt:rule pattern="d13e965">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e965">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgName[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueOrgName должен содержать не пустое
                текстовое наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e965')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]"
                  priority="771"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e974']">
            <schxslt:rule pattern="d13e974">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e974">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueOrgCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueOrgCode должен содержать не пустое
                текстовое наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e974')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueDate"
                  priority="770"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e983']">
            <schxslt:rule pattern="d13e983">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueDate" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueDate</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e983">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueDate</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:IdentityDoc/identity:IssueDate
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueDate обязан содержать один атрибут
                @value с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e983')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc"
                  priority="769"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e995']">
            <schxslt:rule pattern="d13e995">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e995">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(identity:IdentityCardType) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IdentityCardType) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:AuthorityDoc ОБЯЗАН
                содержать один [1..1] элемент identity:IdentityCardType
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Series) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Series) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:AuthorityDoc ДОЛЖЕН содержать
                один [1..1] элемент identity:Series
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Number) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Number) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:AuthorityDoc ОБЯЗАН содержать
                один [1..1] элемент identity:Number
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueOrgName) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueOrgName) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:AuthorityDoc ДОЛЖЕН
                содержать один [1..1] элемент identity:IssueOrgName
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:IssueDate) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IssueDate) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:AuthorityDoc ОБЯЗАН
                содержать один [1..1] элемент identity:IssueDate
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e995')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IdentityCardType"
                  priority="768"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1020']">
            <schxslt:rule pattern="d13e1020">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IdentityCardType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IdentityCardType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1020">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IdentityCardType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IdentityCardType
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.313')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.313'</xsl:attribute>
                     <svrl:text>Элемент
                identity:IdentityCardType обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.313"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityCardType обязан содержать
                один атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1020')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Series[not(@nullFlavor)]"
                  priority="767"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1046']">
            <schxslt:rule pattern="d13e1046">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Series[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1046">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Series должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1046')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Number"
                  priority="766"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1055']">
            <schxslt:rule pattern="d13e1055">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Number" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Number</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1055">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Number</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:Number
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Number должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1055')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueOrgName[not(@nullFlavor)]"
                  priority="765"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1067']">
            <schxslt:rule pattern="d13e1067">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueOrgName[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueOrgName[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1067">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueOrgName[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueOrgName должен содержать не пустое
                текстовое наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1067')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueDate"
                  priority="764"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1076']">
            <schxslt:rule pattern="d13e1076">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueDate" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueDate</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1076">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueDate</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/identity:AuthorityDoc/identity:IssueDate
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IssueDate обязан содержать один атрибут
                @value с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1076')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/code"
                  priority="763"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1088']">
            <schxslt:rule pattern="d13e1088">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1088">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/code не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.14', '1.2.643.5.1.13.2.1.1.1504.40'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.14', '1.2.643.5.1.13.2.1.1.1504.40']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.14"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1088')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr"
                  priority="762"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1113']">
            <schxslt:rule pattern="d13e1113">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1113">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/addr не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode (ClinicalDocument/recordTarget/patientRole/patient/guardian/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address (ClinicalDocument/recordTarget/patientRole/patient/guardian/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1113')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/streetAddressLine"
                  priority="761"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1142']">
            <schxslt:rule pattern="d13e1142">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1142">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/streetAddressLine не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1142')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/address:stateCode"
                  priority="760"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1154']">
            <schxslt:rule pattern="d13e1154">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1154">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/address:stateCode не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1154')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/postalCode[not(@nullFlavor)]"
                  priority="759"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1179']">
            <schxslt:rule pattern="d13e1179">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1179">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1179')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address[not(@nullFlavor)]"
                  priority="758"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1188']">
            <schxslt:rule pattern="d13e1188">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1188">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1188')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:AOGUID"
                  priority="757"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1200']">
            <schxslt:rule pattern="d13e1200">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1200">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1200')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="756"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1212']">
            <schxslt:rule pattern="d13e1212">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1212">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1212')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/telecom"
                  priority="755"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1222']">
            <schxslt:rule pattern="d13e1222">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1222">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/telecom не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1222')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson"
                  priority="754"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1240']">
            <schxslt:rule pattern="d13e1240">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1240">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент guardianPerson ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1240')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name"
                  priority="753"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1252']">
            <schxslt:rule pattern="d13e1252">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1252">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1252')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/family"
                  priority="752"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1270']">
            <schxslt:rule pattern="d13e1270">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1270">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/family
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1270')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/given"
                  priority="751"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1282']">
            <schxslt:rule pattern="d13e1282">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1282">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/given
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1282')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/identity:Patronymic"
                  priority="750"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1294']">
            <schxslt:rule pattern="d13e1294">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1294">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianPerson/name/identity:Patronymic
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1294')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization"
                  priority="749"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1307']">
            <schxslt:rule pattern="d13e1307">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1307">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardianOrganization МОЖЕТ содержать не более одного [0..1] элемента id
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Props) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Props) = 1</xsl:attribute>
                     <svrl:text>Элемент guardianOrganization ДОЛЖЕН содержать
                один [1..1] элемент identity:Props
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент guardianOrganization ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент guardianOrganization МОЖЕТ содержать не
                более одного [0..1] элемента addr
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1307')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]"
                  priority="748"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1328']">
            <schxslt:rule pattern="d13e1328">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1328">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/id[not(@root='1.2.643.100.3')][not(@root='1.2.643.5.1.13.2.1.1.1504.101')][not(@root='1.2.643.5.1.13.13.17.1.1')]
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(@extension != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@extension != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут
                @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@extension) then                         @extension != ''                     else                         (not(@extension)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@extension) then                         @extension != ''                     else                         (not(@extension))</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1328')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props[not(@nullFlavor)]"
                  priority="747"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1346']">
            <schxslt:rule pattern="d13e1346">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1346">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(identity:Ogrn) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Ogrn) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Ogrn
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Ogrnip) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Ogrnip) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Ogrnip
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Okpo) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Okpo) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Okpo
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Okato) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Okato) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Okato
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1346')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrn"
                  priority="746"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1364']">
            <schxslt:rule pattern="d13e1364">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrn" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrn</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1364">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrn</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrn
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Ogrn должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1364')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrnip"
                  priority="745"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1376']">
            <schxslt:rule pattern="d13e1376">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrnip" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrnip</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1376">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrnip</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Ogrnip
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Ogrnip должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1376')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okpo"
                  priority="744"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1388']">
            <schxslt:rule pattern="d13e1388">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okpo" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okpo</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1388">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okpo</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okpo
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Okpo должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1388')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okato"
                  priority="743"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1401']">
            <schxslt:rule pattern="d13e1401">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okato" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okato</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1401">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okato</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/identity:Props/identity:Okato
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Okato должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1401')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/name"
                  priority="742"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1413']">
            <schxslt:rule pattern="d13e1413">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1413">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1413')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr"
                  priority="741"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1425']">
            <schxslt:rule pattern="d13e1425">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1425">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1425')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/streetAddressLine"
                  priority="740"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1453']">
            <schxslt:rule pattern="d13e1453">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1453">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/streetAddressLine
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1453')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/address:stateCode"
                  priority="739"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1465']">
            <schxslt:rule pattern="d13e1465">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1465">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/address:stateCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1465')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/postalCode[not(@nullFlavor)]"
                  priority="738"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1490']">
            <schxslt:rule pattern="d13e1490">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1490">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1490')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address[not(@nullFlavor)]"
                  priority="737"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1500']">
            <schxslt:rule pattern="d13e1500">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1500">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1500')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:AOGUID"
                  priority="736"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1512']">
            <schxslt:rule pattern="d13e1512">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1512">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1512')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="735"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1524']">
            <schxslt:rule pattern="d13e1524">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1524">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/patient/guardian/guardianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1524')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization"
                  priority="734"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1533']">
            <schxslt:rule pattern="d13e1533">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1533">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1</xsl:attribute>
                     <svrl:text>Элемент providerOrganization ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/recordTarget/patientRole/providerOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[@root = '1.2.643.5.1.13.2.1.1.1504.101']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[@root = '1.2.643.5.1.13.2.1.1.1504.101']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                providerOrganization МОЖЕТ содержать не более одного [0..1] элемента id
                (ClinicalDocument/recordTarget/patientRole/providerOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Props) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Props) = 1</xsl:attribute>
                     <svrl:text>Элемент providerOrganization ДОЛЖЕН содержать
                один [1..1] элемент identity:Props
                (ClinicalDocument/recordTarget/patientRole/providerOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент providerOrganization ОБЯЗАН содержать один [1..1]
                элемент name (ClinicalDocument/recordTarget/patientRole/providerOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент providerOrganization МОЖЕТ содержать
                произвольное количество [0..*] элементов telecom
                (ClinicalDocument/recordTarget/patientRole/providerOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент providerOrganization МОЖЕТ содержать не
                более одного [0..1] элемента addr
                (ClinicalDocument/recordTarget/patientRole/providerOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1533')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]"
                  priority="733"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1561']">
            <schxslt:rule pattern="d13e1561">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1561">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/id[not(@root='1.2.643.100.3')][not(@root='1.2.643.5.1.13.2.1.1.1504.101')][not(@root='1.2.643.5.1.13.13.17.1.1')]
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(@extension != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@extension != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут
                @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@extension) then                         @extension != ''                     else                         (not(@extension)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@extension) then                         @extension != ''                     else                         (not(@extension))</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1561')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/id[@root = '1.2.643.5.1.13.2.1.1.1504.101']"
                  priority="732"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1579']">
            <schxslt:rule pattern="d13e1579">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/id[@root = '1.2.643.5.1.13.2.1.1.1504.101']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/id[@root = '1.2.643.5.1.13.2.1.1.1504.101']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1579">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/id[@root = '1.2.643.5.1.13.2.1.1.1504.101']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/id[@root='1.2.643.5.1.13.2.1.1.1504.101']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '1.2.643.5.1.13.2.1.1.1504.101')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.2.1.1.1504.101'</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один
                атрибут @root со значением "1.2.643.5.1.13.2.1.1.1504.101"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@assigningAuthorityName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@assigningAuthorityName != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут
                @assigningAuthorityName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1579')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props[not(@nullFlavor)]"
                  priority="731"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1598']">
            <schxslt:rule pattern="d13e1598">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1598">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(identity:Ogrn) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Ogrn) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Ogrn
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Ogrnip) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Ogrnip) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Ogrnip
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Okpo) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Okpo) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Okpo
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Okato) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Okato) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент identity:Props МОЖЕТ содержать не
                более одного [0..1] элемента identity:Okato
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1598')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrn"
                  priority="730"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1616']">
            <schxslt:rule pattern="d13e1616">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrn" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrn</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1616">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrn</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrn
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Ogrn должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1616')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrnip"
                  priority="729"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1628']">
            <schxslt:rule pattern="d13e1628">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrnip" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrnip</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1628">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrnip</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Ogrnip
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Ogrnip должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1628')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okpo"
                  priority="728"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1640']">
            <schxslt:rule pattern="d13e1640">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okpo" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okpo</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1640">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okpo</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okpo
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Okpo должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1640')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okato"
                  priority="727"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1652']">
            <schxslt:rule pattern="d13e1652">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okato" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okato</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1652">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okato</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/identity:Props/identity:Okato
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Okato должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1652')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/name"
                  priority="726"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1664']">
            <schxslt:rule pattern="d13e1664">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1664">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/name не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1664')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/telecom"
                  priority="725"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1677']">
            <schxslt:rule pattern="d13e1677">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1677">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/telecom не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1677')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr"
                  priority="724"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1695']">
            <schxslt:rule pattern="d13e1695">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1695">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/addr не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode (ClinicalDocument/recordTarget/patientRole/providerOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address (ClinicalDocument/recordTarget/patientRole/providerOrganization/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1695')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/streetAddressLine"
                  priority="723"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1723']">
            <schxslt:rule pattern="d13e1723">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1723">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/streetAddressLine
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1723')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/address:stateCode"
                  priority="722"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1735']">
            <schxslt:rule pattern="d13e1735">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1735">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/address:stateCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1735')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/postalCode[not(@nullFlavor)]"
                  priority="721"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1760']">
            <schxslt:rule pattern="d13e1760">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1760">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1760')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address[not(@nullFlavor)]"
                  priority="720"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1769']">
            <schxslt:rule pattern="d13e1769">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1769">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1769')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:AOGUID"
                  priority="719"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1782']">
            <schxslt:rule pattern="d13e1782">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1782">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1782')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="718"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1794']">
            <schxslt:rule pattern="d13e1794">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1794">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/recordTarget/patientRole/providerOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1794')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author" priority="717" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1803']">
            <schxslt:rule pattern="d13e1803">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1803">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/author не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(time) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(time) = 1</xsl:attribute>
                     <svrl:text>Элемент author ДОЛЖЕН содержать один [1..1] элемент time
                (ClinicalDocument/author) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedAuthor) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedAuthor) = 1</xsl:attribute>
                     <svrl:text>Элемент author ОБЯЗАН содержать один [1..1]
                элемент assignedAuthor (ClinicalDocument/author) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1803')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/time" priority="716" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1818']">
            <schxslt:rule pattern="d13e1818">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/time" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/time</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1818">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/time</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент time обязан содержать один атрибут @nullFlavor
                со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1818')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor"
                  priority="715"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1827']">
            <schxslt:rule pattern="d13e1827">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1827">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/author/assignedAuthor не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = '.70']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = '.70']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                assignedAuthor ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[@root = '1.2.643.100.3']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[@root = '1.2.643.100.3']) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedAuthor ОБЯЗАН
                содержать один [1..1] элемент id (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedAuthor ОБЯЗАН содержать один [1..1]
                элемент code (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedAuthor МОЖЕТ содержать не более
                одного [0..1] элемента addr (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент assignedAuthor МОЖЕТ содержать произвольное
                количество [0..*] элементов telecom (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedPerson) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedPerson) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedAuthor ОБЯЗАН содержать один
                [1..1] элемент assignedPerson (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(representedOrganization) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(representedOrganization) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedAuthor МОЖЕТ
                содержать не более одного [0..1] элемента representedOrganization
                (ClinicalDocument/author/assignedAuthor) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1827')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/id[substring(@root, string-length(@root) - 2) = '.70']"
                  priority="714"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1858']">
            <schxslt:rule pattern="d13e1858">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/id[substring(@root, string-length(@root) - 2) = '.70']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/id[substring(@root, string-length(@root) - 2) = '.70']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1858">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/id[substring(@root, string-length(@root) - 2) = '.70']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/id[substring(@root, string-length(@root) -
                2)='.70'] не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1858')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/id[@root = '1.2.643.100.3']"
                  priority="713"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1877']">
            <schxslt:rule pattern="d13e1877">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/id[@root = '1.2.643.100.3']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/id[@root = '1.2.643.100.3']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1877">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/id[@root = '1.2.643.100.3']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/id[@root='1.2.643.100.3'] не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '1.2.643.100.3')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.100.3'</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root со
                значением "1.2.643.100.3"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1877')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/code"
                  priority="712"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1892']">
            <schxslt:rule pattern="d13e1892">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1892">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/author/assignedAuthor/code не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1892')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr"
                  priority="711"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1917']">
            <schxslt:rule pattern="d13e1917">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1917">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/author/assignedAuthor/addr не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine (ClinicalDocument/author/assignedAuthor/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode (ClinicalDocument/author/assignedAuthor/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode (ClinicalDocument/author/assignedAuthor/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address (ClinicalDocument/author/assignedAuthor/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1917')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr/streetAddressLine"
                  priority="710"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1945']">
            <schxslt:rule pattern="d13e1945">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1945">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/addr/streetAddressLine не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1945')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr/address:stateCode"
                  priority="709"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1957']">
            <schxslt:rule pattern="d13e1957">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1957">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/addr/address:stateCode не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1957')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr/postalCode[not(@nullFlavor)]"
                  priority="708"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1982']">
            <schxslt:rule pattern="d13e1982">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1982">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1982')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr/fias:Address[not(@nullFlavor)]"
                  priority="707"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e1992']">
            <schxslt:rule pattern="d13e1992">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e1992">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID (ClinicalDocument/author/assignedAuthor/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/author/assignedAuthor/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e1992')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:AOGUID"
                  priority="706"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2004']">
            <schxslt:rule pattern="d13e2004">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2004">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:AOGUID не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2004')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="705"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2016']">
            <schxslt:rule pattern="d13e2016">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2016">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2016')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/telecom"
                  priority="704"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2025']">
            <schxslt:rule pattern="d13e2025">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2025">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/author/assignedAuthor/telecom не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2025')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/assignedPerson"
                  priority="703"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2043']">
            <schxslt:rule pattern="d13e2043">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/assignedPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2043">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/author/assignedAuthor/assignedPerson
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedPerson ОБЯЗАН содержать один [1..1]
                элемент name (ClinicalDocument/author/assignedAuthor/assignedPerson) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2043')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/assignedPerson/name"
                  priority="702"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2055']">
            <schxslt:rule pattern="d13e2055">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/assignedPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2055">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/assignedPerson/name не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family (ClinicalDocument/author/assignedAuthor/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/author/assignedAuthor/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/author/assignedAuthor/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2055')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/assignedPerson/name/family"
                  priority="701"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2074']">
            <schxslt:rule pattern="d13e2074">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/assignedPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2074">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/assignedPerson/name/family не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2074')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/assignedPerson/name/given"
                  priority="700"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2086']">
            <schxslt:rule pattern="d13e2086">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/assignedPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2086">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/assignedPerson/name/given не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2086')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/assignedPerson/name/identity:Patronymic"
                  priority="699"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2098']">
            <schxslt:rule pattern="d13e2098">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/assignedPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2098">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/assignedPerson/name/identity:Patronymic не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2098')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization"
                  priority="698"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2110']">
            <schxslt:rule pattern="d13e2110">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2110">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'ORG')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'ORG'</xsl:attribute>
                     <svrl:text>Элемент representedOrganization обязан содержать один
                атрибут @classCode со значением "ORG"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1</xsl:attribute>
                     <svrl:text>Элемент representedOrganization ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/author/assignedAuthor/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент representedOrganization ОБЯЗАН содержать один
                [1..1] элемент name (ClinicalDocument/author/assignedAuthor/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент representedOrganization МОЖЕТ содержать
                произвольное количество [0..*] элементов telecom
                (ClinicalDocument/author/assignedAuthor/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент representedOrganization МОЖЕТ содержать не
                более одного [0..1] элемента addr
                (ClinicalDocument/author/assignedAuthor/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2110')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]"
                  priority="697"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2135']">
            <schxslt:rule pattern="d13e2135">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2135">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/id[not(@root='1.2.643.100.3')][not(@root='1.2.643.5.1.13.2.1.1.1504.101')][not(@root='1.2.643.5.1.13.13.17.1.1')]
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(@extension != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@extension != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут
                @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@extension) then                         @extension != ''                     else                         (not(@extension)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@extension) then                         @extension != ''                     else                         (not(@extension))</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2135')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/name"
                  priority="696"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2153']">
            <schxslt:rule pattern="d13e2153">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2153">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/name не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2153')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/telecom"
                  priority="695"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2166']">
            <schxslt:rule pattern="d13e2166">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2166">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/telecom не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2166')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr"
                  priority="694"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2184']">
            <schxslt:rule pattern="d13e2184">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2184">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/addr не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/author/assignedAuthor/representedOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/author/assignedAuthor/representedOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode (ClinicalDocument/author/assignedAuthor/representedOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address (ClinicalDocument/author/assignedAuthor/representedOrganization/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2184')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr/streetAddressLine"
                  priority="693"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2212']">
            <schxslt:rule pattern="d13e2212">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2212">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/addr/streetAddressLine
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2212')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr/address:stateCode"
                  priority="692"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2224']">
            <schxslt:rule pattern="d13e2224">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2224">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/addr/address:stateCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2224')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr/postalCode[not(@nullFlavor)]"
                  priority="691"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2249']">
            <schxslt:rule pattern="d13e2249">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2249">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2249')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address[not(@nullFlavor)]"
                  priority="690"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2258']">
            <schxslt:rule pattern="d13e2258">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2258">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2258')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:AOGUID"
                  priority="689"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2271']">
            <schxslt:rule pattern="d13e2271">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2271">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2271')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="688"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2283']">
            <schxslt:rule pattern="d13e2283">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2283">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/author/assignedAuthor/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2283')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian" priority="687" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2292']">
            <schxslt:rule pattern="d13e2292">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2292">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/custodian не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(assignedCustodian) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedCustodian) = 1</xsl:attribute>
                     <svrl:text>Элемент custodian ОБЯЗАН содержать один
                [1..1] элемент assignedCustodian (ClinicalDocument/custodian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2292')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian"
                  priority="686"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2304']">
            <schxslt:rule pattern="d13e2304">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2304">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/custodian/assignedCustodian не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(representedCustodianOrganization) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(representedCustodianOrganization) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedCustodian
                ОБЯЗАН содержать один [1..1] элемент representedCustodianOrganization
                (ClinicalDocument/custodian/assignedCustodian) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2304')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization"
                  priority="685"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2316']">
            <schxslt:rule pattern="d13e2316">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2316">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'ORG')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'ORG'</xsl:attribute>
                     <svrl:text>Элемент representedCustodianOrganization обязан
                содержать один атрибут @classCode со значением "ORG"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1</xsl:attribute>
                     <svrl:text>Элемент representedCustodianOrganization ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент representedCustodianOrganization ОБЯЗАН содержать
                один [1..1] элемент name
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент representedCustodianOrganization МОЖЕТ
                содержать не более одного [0..1] элемента telecom
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = 1</xsl:attribute>
                     <svrl:text>Элемент representedCustodianOrganization ОБЯЗАН содержать
                один [1..1] элемент addr
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2316')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]"
                  priority="684"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2341']">
            <schxslt:rule pattern="d13e2341">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2341">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/id[not(@root='1.2.643.100.3')][not(@root='1.2.643.5.1.13.2.1.1.1504.101')][not(@root='1.2.643.5.1.13.13.17.1.1')]
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(@extension != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@extension != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут
                @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@extension) then                         @extension != ''                     else                         (not(@extension)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@extension) then                         @extension != ''                     else                         (not(@extension))</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2341')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/name"
                  priority="683"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2360']">
            <schxslt:rule pattern="d13e2360">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2360">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2360')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/telecom"
                  priority="682"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2372']">
            <schxslt:rule pattern="d13e2372">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2372">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/telecom
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2372')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr"
                  priority="681"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2390']">
            <schxslt:rule pattern="d13e2390">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2390">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2390')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/streetAddressLine"
                  priority="680"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2418']">
            <schxslt:rule pattern="d13e2418">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2418">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/streetAddressLine
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2418')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/address:stateCode"
                  priority="679"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2430']">
            <schxslt:rule pattern="d13e2430">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2430">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/address:stateCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2430')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/postalCode[not(@nullFlavor)]"
                  priority="678"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2455']">
            <schxslt:rule pattern="d13e2455">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2455">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2455')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address[not(@nullFlavor)]"
                  priority="677"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2465']">
            <schxslt:rule pattern="d13e2465">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2465">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2465')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:AOGUID"
                  priority="676"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2477']">
            <schxslt:rule pattern="d13e2477">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2477">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2477')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="675"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2489']">
            <schxslt:rule pattern="d13e2489">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2489">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/custodian/assignedCustodian/representedCustodianOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2489')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']"
                  priority="674"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2498']">
            <schxslt:rule pattern="d13e2498">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2498">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(intendedRecipient) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(intendedRecipient) = 1</xsl:attribute>
                     <svrl:text>Элемент informationRecipient ОБЯЗАН
                содержать один [1..1] элемент intendedRecipient
                (ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2498')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient"
                  priority="673"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2510']">
            <schxslt:rule pattern="d13e2510">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2510">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(receivedOrganization) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(receivedOrganization) = 1</xsl:attribute>
                     <svrl:text>Элемент intendedRecipient ОБЯЗАН
                содержать один [1..1] элемент receivedOrganization
                (ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2510')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization"
                  priority="672"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2522']">
            <schxslt:rule pattern="d13e2522">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2522">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient/receivedOrganization
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[@root = '1.2.643.5.1.13']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[@root = '1.2.643.5.1.13']) = 1</xsl:attribute>
                     <svrl:text>Элемент receivedOrganization
                ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient/receivedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент receivedOrganization ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient/receivedOrganization)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2522')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/id[@root = '1.2.643.5.1.13']"
                  priority="671"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2538']">
            <schxslt:rule pattern="d13e2538">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/id[@root = '1.2.643.5.1.13']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/id[@root = '1.2.643.5.1.13']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2538">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/id[@root = '1.2.643.5.1.13']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient/receivedOrganization/id[@root='1.2.643.5.1.13']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '1.2.643.5.1.13')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13'</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root
                со значением "1.2.643.5.1.13"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2538')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/name"
                  priority="670"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2550']">
            <schxslt:rule pattern="d13e2550">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2550">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13']/intendedRecipient/receivedOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13']/intendedRecipient/receivedOrganization/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2550')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]"
                  priority="669"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2562']">
            <schxslt:rule pattern="d13e2562">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2562">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(intendedRecipient) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(intendedRecipient) = 1</xsl:attribute>
                     <svrl:text>Элемент informationRecipient ОБЯЗАН
                содержать один [1..1] элемент intendedRecipient
                (ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2562')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient"
                  priority="668"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2574']">
            <schxslt:rule pattern="d13e2574">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2574">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]/intendedRecipient
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(receivedOrganization) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(receivedOrganization) = 1</xsl:attribute>
                     <svrl:text>Элемент intendedRecipient ОБЯЗАН
                содержать один [1..1] элемент receivedOrganization
                (ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]/intendedRecipient)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2574')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization"
                  priority="667"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2586']">
            <schxslt:rule pattern="d13e2586">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2586">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]/intendedRecipient/receivedOrganization
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент receivedOrganization ДОЛЖЕН содержать один
                [1..1] элемент id
                (ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]/intendedRecipient/receivedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент receivedOrganization ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]/intendedRecipient/receivedOrganization)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2586')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][not(@nullFlavor)]"
                  priority="666"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2601']">
            <schxslt:rule pattern="d13e2601">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2601">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(@extension != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@extension != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут
                @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@extension) then                         @extension != ''                     else                         (not(@extension)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@extension) then                         @extension != ''                     else                         (not(@extension))</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2601')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][@nullFlavor]"
                  priority="665"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2617']">
            <schxslt:rule pattern="d13e2617">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2617">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2617')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/name"
                  priority="664"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2629']">
            <schxslt:rule pattern="d13e2629">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2629">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root = '1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/informationRecipient[not(intendedRecipient/receivedOrganization/id/@root='1.2.643.5.1.13')]/intendedRecipient/receivedOrganization/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2629')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator"
                  priority="663"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2641']">
            <schxslt:rule pattern="d13e2641">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2641">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/legalAuthenticator не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(time) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(time) = 1</xsl:attribute>
                     <svrl:text>Элемент legalAuthenticator ДОЛЖЕН содержать один [1..1]
                элемент time (ClinicalDocument/legalAuthenticator) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(signatureCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(signatureCode) = 1</xsl:attribute>
                     <svrl:text>Элемент legalAuthenticator ДОЛЖЕН содержать один
                [1..1] элемент signatureCode (ClinicalDocument/legalAuthenticator) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedEntity) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedEntity) = 1</xsl:attribute>
                     <svrl:text>Элемент legalAuthenticator ОБЯЗАН содержать
                один [1..1] элемент assignedEntity (ClinicalDocument/legalAuthenticator) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2641')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/time"
                  priority="662"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2659']">
            <schxslt:rule pattern="d13e2659">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/time" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/time</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2659">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/time</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент time обязан содержать один атрибут @nullFlavor
                со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2659')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/signatureCode"
                  priority="661"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2668']">
            <schxslt:rule pattern="d13e2668">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/signatureCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/signatureCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2668">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/signatureCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент signatureCode обязан содержать один атрибут
                @nullFlavor со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2668')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity"
                  priority="660"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2677']">
            <schxslt:rule pattern="d13e2677">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2677">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/legalAuthenticator/assignedEntity не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = '.70']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = '.70']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                assignedEntity ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[@root = '1.2.643.100.3']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[@root = '1.2.643.100.3']) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН
                содержать один [1..1] элемент id
                (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один [1..1]
                элемент code (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ содержать не более
                одного [0..1] элемента addr (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ содержать произвольное
                количество [0..*] элементов telecom
                (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedPerson) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedPerson) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один
                [1..1] элемент assignedPerson (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(representedOrganization) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(representedOrganization) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ
                содержать не более одного [0..1] элемента representedOrganization
                (ClinicalDocument/legalAuthenticator/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2677')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/id[substring(@root, string-length(@root) - 2) = '.70']"
                  priority="659"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2709']">
            <schxslt:rule pattern="d13e2709">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/id[substring(@root, string-length(@root) - 2) = '.70']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/id[substring(@root, string-length(@root) - 2) = '.70']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2709">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/id[substring(@root, string-length(@root) - 2) = '.70']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/id[substring(@root,
                string-length(@root) - 2)='.70'] не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2709')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/id[@root = '1.2.643.100.3']"
                  priority="658"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2727']">
            <schxslt:rule pattern="d13e2727">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/id[@root = '1.2.643.100.3']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/id[@root = '1.2.643.100.3']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2727">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/id[@root = '1.2.643.100.3']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/id[@root='1.2.643.100.3'] не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root = '1.2.643.100.3')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.100.3'</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root со
                значением "1.2.643.100.3"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2727')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/code"
                  priority="657"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2742']">
            <schxslt:rule pattern="d13e2742">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2742">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/code не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2742')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr"
                  priority="656"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2767']">
            <schxslt:rule pattern="d13e2767">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2767">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/addr не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine (ClinicalDocument/legalAuthenticator/assignedEntity/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode (ClinicalDocument/legalAuthenticator/assignedEntity/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode (ClinicalDocument/legalAuthenticator/assignedEntity/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address (ClinicalDocument/legalAuthenticator/assignedEntity/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2767')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr/streetAddressLine"
                  priority="655"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2795']">
            <schxslt:rule pattern="d13e2795">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2795">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/addr/streetAddressLine не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2795')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr/address:stateCode"
                  priority="654"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2807']">
            <schxslt:rule pattern="d13e2807">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2807">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/addr/address:stateCode не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2807')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr/postalCode[not(@nullFlavor)]"
                  priority="653"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2833']">
            <schxslt:rule pattern="d13e2833">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2833">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2833')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address[not(@nullFlavor)]"
                  priority="652"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2842']">
            <schxslt:rule pattern="d13e2842">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2842">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2842')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:AOGUID"
                  priority="651"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2854']">
            <schxslt:rule pattern="d13e2854">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2854">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:AOGUID не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2854')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="650"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2866']">
            <schxslt:rule pattern="d13e2866">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2866">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2866')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/telecom"
                  priority="649"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2875']">
            <schxslt:rule pattern="d13e2875">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2875">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/telecom не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2875')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson"
                  priority="648"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2893']">
            <schxslt:rule pattern="d13e2893">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2893">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedPerson ОБЯЗАН содержать один [1..1]
                элемент name (ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2893')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name"
                  priority="647"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2906']">
            <schxslt:rule pattern="d13e2906">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2906">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family (ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2906')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/family"
                  priority="646"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2924']">
            <schxslt:rule pattern="d13e2924">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2924">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/family не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2924')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/given"
                  priority="645"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2936']">
            <schxslt:rule pattern="d13e2936">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2936">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/given не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2936')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/identity:Patronymic"
                  priority="644"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2948']">
            <schxslt:rule pattern="d13e2948">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2948">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/assignedPerson/name/identity:Patronymic
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2948')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization"
                  priority="643"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2960']">
            <schxslt:rule pattern="d13e2960">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2960">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'ORG')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'ORG'</xsl:attribute>
                     <svrl:text>Элемент representedOrganization обязан содержать один
                атрибут @classCode со значением "ORG"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]) = 1</xsl:attribute>
                     <svrl:text>Элемент representedOrganization ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент representedOrganization ОБЯЗАН содержать один
                [1..1] элемент name
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент representedOrganization МОЖЕТ содержать
                произвольное количество [0..*] элементов telecom
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент representedOrganization МОЖЕТ содержать не
                более одного [0..1] элемента addr
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2960')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]"
                  priority="642"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e2985']">
            <schxslt:rule pattern="d13e2985">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e2985">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/id[not(@root = '1.2.643.100.3')][not(@root = '1.2.643.5.1.13.2.1.1.1504.101')][not(@root = '1.2.643.5.1.13.13.17.1.1')]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/id[not(@root='1.2.643.100.3')][not(@root='1.2.643.5.1.13.2.1.1.1504.101')][not(@root='1.2.643.5.1.13.13.17.1.1')]
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(@extension != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@extension != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут
                @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@extension) then                         @extension != ''                     else                         (not(@extension)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@extension) then                         @extension != ''                     else                         (not(@extension))</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e2985')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/name"
                  priority="641"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3004']">
            <schxslt:rule pattern="d13e3004">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3004">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/name не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3004')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/telecom"
                  priority="640"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3016']">
            <schxslt:rule pattern="d13e3016">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3016">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/telecom
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3016')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr"
                  priority="639"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3034']">
            <schxslt:rule pattern="d13e3034">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3034">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3034')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/streetAddressLine"
                  priority="638"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3062']">
            <schxslt:rule pattern="d13e3062">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3062">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/streetAddressLine
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3062')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/address:stateCode"
                  priority="637"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3074']">
            <schxslt:rule pattern="d13e3074">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3074">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/address:stateCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3074')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/postalCode[not(@nullFlavor)]"
                  priority="636"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3099']">
            <schxslt:rule pattern="d13e3099">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3099">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3099')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address[not(@nullFlavor)]"
                  priority="635"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3109']">
            <schxslt:rule pattern="d13e3109">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3109">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3109')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:AOGUID"
                  priority="634"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3121']">
            <schxslt:rule pattern="d13e3121">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3121">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3121')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="633"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3133']">
            <schxslt:rule pattern="d13e3133">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3133">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/legalAuthenticator/assignedEntity/representedOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3133')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']"
                  priority="632"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3142']">
            <schxslt:rule pattern="d13e3142">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3142">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/participant[@typeCode='IND'] не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'IND')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'IND'</xsl:attribute>
                     <svrl:text>Элемент participant обязан содержать один атрибут
                @typeCode со значением "IND"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(associatedEntity) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(associatedEntity) = 1</xsl:attribute>
                     <svrl:text>Элемент participant ОБЯЗАН содержать один
                [1..1] элемент associatedEntity (ClinicalDocument/participant[@typeCode='IND'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3142')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity"
                  priority="631"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3157']">
            <schxslt:rule pattern="d13e3157">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3157">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'GUAR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'GUAR'</xsl:attribute>
                     <svrl:text>Элемент associatedEntity обязан содержать один
                атрибут @classCode со значением "GUAR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент associatedEntity ОБЯЗАН содержать один [1..1]
                элемент code (ClinicalDocument/participant[@typeCode='IND']/associatedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:DocInfo) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:DocInfo) = 1</xsl:attribute>
                     <svrl:text>Элемент associatedEntity ДОЛЖЕН содержать
                один [1..1] элемент identity:DocInfo
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(scopingOrganization) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(scopingOrganization) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент associatedEntity МОЖЕТ
                содержать не более одного [0..1] элемента scopingOrganization
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3157')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/code"
                  priority="630"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3178']">
            <schxslt:rule pattern="d13e3178">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3178">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/code не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1039')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1039'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1039"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3178')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo[not(@nullFlavor)]"
                  priority="629"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3204']">
            <schxslt:rule pattern="d13e3204">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3204">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(identity:IdentityDocType) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:IdentityDocType) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:DocInfo ОБЯЗАН
                содержать один [1..1] элемент identity:IdentityDocType
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:InsurancePolicyType) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:InsurancePolicyType) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:DocInfo ДОЛЖЕН
                содержать один [1..1] элемент identity:InsurancePolicyType
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Series) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Series) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:DocInfo ДОЛЖЕН содержать один
                [1..1] элемент identity:Series
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Number) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Number) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:DocInfo ДОЛЖЕН содержать один
                [1..1] элемент identity:Number
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:INN) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:INN) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:DocInfo ДОЛЖЕН содержать один
                [1..1] элемент identity:INN
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:DocInfo ДОЛЖЕН
                содержать один [1..1] элемент identity:effectiveTime
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3204')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:IdentityDocType"
                  priority="628"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3229']">
            <schxslt:rule pattern="d13e3229">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:IdentityDocType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:IdentityDocType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3229">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:IdentityDocType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo/identity:IdentityDocType
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.724')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.724'</xsl:attribute>
                     <svrl:text>Элемент
                identity:IdentityDocType обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.724"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDocType обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDocType обязан содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDocType обязан
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:IdentityDocType обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3229')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor)]"
                  priority="627"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3254']">
            <schxslt:rule pattern="d13e3254">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3254">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1035')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1035'</xsl:attribute>
                     <svrl:text>Элемент
                identity:InsurancePolicyType должен содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1035"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType должен
                содержать один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType должен содержать один
                атрибут @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType должен
                содержать один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент identity:InsurancePolicyType должен содержать
                один атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3254')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[@nullFlavor]"
                  priority="626"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3275']">
            <schxslt:rule pattern="d13e3275">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3275">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:InsurancePolicyType[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3275')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Series[not(@nullFlavor)]"
                  priority="625"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3287']">
            <schxslt:rule pattern="d13e3287">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Series[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3287">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Series[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Series должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3287')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Number[not(@nullFlavor)]"
                  priority="624"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3296']">
            <schxslt:rule pattern="d13e3296">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Number[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Number[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3296">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:Number[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Number должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3296')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:INN[not(@nullFlavor)]"
                  priority="623"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3306']">
            <schxslt:rule pattern="d13e3306">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:INN[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:INN[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3306">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:INN[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:INN должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3306')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime[not(@nullFlavor)]"
                  priority="622"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3315']">
            <schxslt:rule pattern="d13e3315">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3315">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(identity:low) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:low) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:effectiveTime ОБЯЗАН содержать
                один [1..1] элемент identity:low
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo/identity:effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:high) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:high) = 1</xsl:attribute>
                     <svrl:text>Элемент identity:effectiveTime ДОЛЖЕН содержать
                один [1..1] элемент identity:high
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo/identity:effectiveTime)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3315')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:low"
                  priority="621"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3327']">
            <schxslt:rule pattern="d13e3327">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:low" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:low</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3327">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:low</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:low
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент identity:low обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3327')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[not(@nullFlavor)]"
                  priority="620"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3339']">
            <schxslt:rule pattern="d13e3339">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3339">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент identity:high должен содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3339')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[@nullFlavor]"
                  priority="619"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3348']">
            <schxslt:rule pattern="d13e3348">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3348">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3348')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization"
                  priority="618"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3357']">
            <schxslt:rule pattern="d13e3357">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3357">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент scopingOrganization ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент scopingOrganization ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) &gt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) &gt;= 1</xsl:attribute>
                     <svrl:text>Элемент scopingOrganization ДОЛЖЕН содержать не менее
                одного [1..*] элемента telecom
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(addr) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(addr) = 1</xsl:attribute>
                     <svrl:text>Элемент scopingOrganization ДОЛЖЕН содержать один [1..1]
                элемент addr
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3357')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][not(@nullFlavor)]"
                  priority="617"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3379']">
            <schxslt:rule pattern="d13e3379">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3379">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.99.2.183')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.99.2.183'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.99.2.183"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3379')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][@nullFlavor]"
                  priority="616"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3391']">
            <schxslt:rule pattern="d13e3391">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3391">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3391')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/name"
                  priority="615"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3400']">
            <schxslt:rule pattern="d13e3400">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3400">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент name должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3400')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[not(@nullFlavor)]"
                  priority="614"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3412']">
            <schxslt:rule pattern="d13e3412">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3412">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3412')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[@nullFlavor]"
                  priority="613"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3427']">
            <schxslt:rule pattern="d13e3427">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3427">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/telecom[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3427')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr[not(@nullFlavor)]"
                  priority="612"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3436']">
            <schxslt:rule pattern="d13e3436">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3436">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент addr должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(streetAddressLine) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(streetAddressLine) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент streetAddressLine
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(address:stateCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(address:stateCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ОБЯЗАН содержать один [1..1]
                элемент address:stateCode
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(postalCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(postalCode) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                postalCode
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:Address) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:Address) = 1</xsl:attribute>
                     <svrl:text>Элемент addr ДОЛЖЕН содержать один [1..1] элемент
                fias:Address
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3436')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/streetAddressLine"
                  priority="611"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3462']">
            <schxslt:rule pattern="d13e3462">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/streetAddressLine" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3462">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/streetAddressLine</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr/streetAddressLine
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент streetAddressLine должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3462')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/address:stateCode"
                  priority="610"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3474']">
            <schxslt:rule pattern="d13e3474">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/address:stateCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3474">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/address:stateCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr/address:stateCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.206', '1.2.643.5.1.13.13.11.1093']</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.206"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один атрибут @code
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент address:stateCode обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3474')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/postalCode[not(@nullFlavor)]"
                  priority="609"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3499']">
            <schxslt:rule pattern="d13e3499">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3499">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент postalCode должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3499')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address[not(@nullFlavor)]"
                  priority="608"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3508']">
            <schxslt:rule pattern="d13e3508">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3508">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(fias:AOGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:AOGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ОБЯЗАН содержать один [1..1]
                элемент fias:AOGUID
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr/fias:Address) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(fias:HOUSEGUID) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(fias:HOUSEGUID) = 1</xsl:attribute>
                     <svrl:text>Элемент fias:Address ДОЛЖЕН содержать один
                [1..1] элемент fias:HOUSEGUID
                (ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr/fias:Address)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3508')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:AOGUID"
                  priority="607"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3520']">
            <schxslt:rule pattern="d13e3520">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:AOGUID" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3520">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:AOGUID</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/participant[@typeCode='IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:AOGUID
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:AOGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3520')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]"
                  priority="606"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3532']">
            <schxslt:rule pattern="d13e3532">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3532">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/addr/fias:Address/fias:HOUSEGUID[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент fias:HOUSEGUID должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3532')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf"
                  priority="605"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3542']">
            <schxslt:rule pattern="d13e3542">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3542">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/documentationOf не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(serviceEvent) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(serviceEvent) = 1</xsl:attribute>
                     <svrl:text>Элемент documentationOf ОБЯЗАН содержать один
                [1..1] элемент serviceEvent (ClinicalDocument/documentationOf) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3542')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent"
                  priority="604"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3554']">
            <schxslt:rule pattern="d13e3554">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3554">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/documentationOf/serviceEvent не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент serviceEvent ОБЯЗАН содержать один [1..1] элемент
                code (ClinicalDocument/documentationOf/serviceEvent) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент serviceEvent ОБЯЗАН содержать один
                [1..1] элемент effectiveTime (ClinicalDocument/documentationOf/serviceEvent) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(medService:serviceForm) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(medService:serviceForm) = 1</xsl:attribute>
                     <svrl:text>Элемент serviceEvent ОБЯЗАН содержать
                один [1..1] элемент medService:serviceForm
                (ClinicalDocument/documentationOf/serviceEvent) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(medService:serviceType) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(medService:serviceType) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент serviceEvent МОЖЕТ
                содержать не более одного [0..1] элемента medService:serviceType
                (ClinicalDocument/documentationOf/serviceEvent) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(medService:serviceCond) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(medService:serviceCond) = 1</xsl:attribute>
                     <svrl:text>Элемент serviceEvent ОБЯЗАН содержать
                один [1..1] элемент medService:serviceCond
                (ClinicalDocument/documentationOf/serviceEvent) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3554')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/code"
                  priority="603"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3579']">
            <schxslt:rule pattern="d13e3579">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3579">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/documentationOf/serviceEvent/code не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '13')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '13'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "13"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.726')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.726'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.726"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3579')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/effectiveTime"
                  priority="602"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3604']">
            <schxslt:rule pattern="d13e3604">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3604">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/documentationOf/serviceEvent/effectiveTime не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(low) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(low) = 1</xsl:attribute>
                     <svrl:text>Элемент effectiveTime ОБЯЗАН содержать один [1..1] элемент
                low (ClinicalDocument/documentationOf/serviceEvent/effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(high) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(high) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент effectiveTime МОЖЕТ содержать не более
                одного [0..1] элемента high
                (ClinicalDocument/documentationOf/serviceEvent/effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3604')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/effectiveTime/low"
                  priority="601"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3619']">
            <schxslt:rule pattern="d13e3619">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/effectiveTime/low" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/effectiveTime/low</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3619">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/effectiveTime/low</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/documentationOf/serviceEvent/effectiveTime/low не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент low обязан содержать один атрибут @value с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3619')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/effectiveTime/high"
                  priority="600"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3631']">
            <schxslt:rule pattern="d13e3631">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/effectiveTime/high" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/effectiveTime/high</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3631">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/effectiveTime/high</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/documentationOf/serviceEvent/effectiveTime/high не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент high обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3631')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/medService:serviceForm"
                  priority="599"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3644']">
            <schxslt:rule pattern="d13e3644">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/medService:serviceForm" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/medService:serviceForm</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3644">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/medService:serviceForm</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/documentationOf/serviceEvent/medService:serviceForm не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1551', '1.2.643.5.1.13.2.1.1.568', '1.2.643.5.1.13.13.99.2.377'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1551', '1.2.643.5.1.13.2.1.1.568', '1.2.643.5.1.13.13.99.2.377']</xsl:attribute>
                     <svrl:text>Элемент medService:serviceForm обязан содержать один атрибут @codeSystem со
                значением "1.2.643.5.1.13.13.11.1551"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceForm обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceForm обязан содержать один атрибут
                @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceForm обязан содержать
                один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceForm обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3644')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/medService:serviceType"
                  priority="598"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3669']">
            <schxslt:rule pattern="d13e3669">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/medService:serviceType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/medService:serviceType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3669">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/medService:serviceType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/documentationOf/serviceEvent/medService:serviceType не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1034')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1034'</xsl:attribute>
                     <svrl:text>Элемент medService:serviceType
                обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1034"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceType обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceType обязан содержать один атрибут
                @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceType обязан содержать
                один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceType обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3669')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/documentationOf/serviceEvent/medService:serviceCond"
                  priority="597"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3694']">
            <schxslt:rule pattern="d13e3694">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/documentationOf/serviceEvent/medService:serviceCond" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/medService:serviceCond</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3694">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/documentationOf/serviceEvent/medService:serviceCond</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/documentationOf/serviceEvent/medService:serviceCond не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.322', '1.2.643.5.1.13.2.1.1.103'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.322', '1.2.643.5.1.13.2.1.1.103']</xsl:attribute>
                     <svrl:text>Элемент medService:serviceCond обязан содержать один атрибут @codeSystem со
                значением "1.2.643.5.1.13.13.99.2.322"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceCond обязан содержать
                один атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceCond обязан содержать один атрибут
                @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceCond обязан содержать
                один атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:serviceCond обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3694')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf" priority="596" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3719']">
            <schxslt:rule pattern="d13e3719">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3719">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/componentOf не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(encompassingEncounter) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(encompassingEncounter) = 1</xsl:attribute>
                     <svrl:text>Элемент componentOf ОБЯЗАН содержать
                один [1..1] элемент encompassingEncounter (ClinicalDocument/componentOf) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3719')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter"
                  priority="595"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3731']">
            <schxslt:rule pattern="d13e3731">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3731">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/componentOf/encompassingEncounter не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = '.15']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = '.15']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                encompassingEncounter ОБЯЗАН содержать один [1..1] элемент id
                (ClinicalDocument/componentOf/encompassingEncounter) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = ['.16', '.17']]) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = ['.16', '.17']]) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент encompassingEncounter МОЖЕТ содержать не более одного [0..1] элемента id
                (ClinicalDocument/componentOf/encompassingEncounter) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент encompassingEncounter МОЖЕТ содержать не
                более одного [0..1] элемента code
                (ClinicalDocument/componentOf/encompassingEncounter) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(medService:DocType) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(medService:DocType) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент encompassingEncounter МОЖЕТ
                содержать не более одного [0..1] элемента medService:DocType
                (ClinicalDocument/componentOf/encompassingEncounter) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент encompassingEncounter ОБЯЗАН содержать
                один [1..1] элемент effectiveTime
                (ClinicalDocument/componentOf/encompassingEncounter) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3731')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = '.15']"
                  priority="594"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3756']">
            <schxslt:rule pattern="d13e3756">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = '.15']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = '.15']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3756">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = '.15']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root,
                string-length(@root) - 2)='.15'] не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.15</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.15$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.15$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.15</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3756')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = ['.16', '.17']]"
                  priority="593"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3775']">
            <schxslt:rule pattern="d13e3775">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = ['.16', '.17']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = ['.16', '.17']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3775">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root, string-length(@root) - 2) = ['.16', '.17']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/id[substring(@root,
                string-length(@root) - 2)=['.16','.17']] не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.16; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.17</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.(16|17)$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.(16|17)$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.16; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.17</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3775')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/code"
                  priority="592"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3793']">
            <schxslt:rule pattern="d13e3793">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3793">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/code не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.723')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.723'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.723"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3793')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/medService:DocType"
                  priority="591"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3818']">
            <schxslt:rule pattern="d13e3818">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/medService:DocType" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/medService:DocType</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3818">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/medService:DocType</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/medService:DocType не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1522', '1.2.643.5.1.13.2.1.1.646', '1.2.643.5.1.13.13.11.1115', '1.2.643.5.1.13.13.99.2.195'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1522', '1.2.643.5.1.13.2.1.1.646', '1.2.643.5.1.13.13.11.1115', '1.2.643.5.1.13.13.99.2.195']</xsl:attribute>
                     <svrl:text>Элемент medService:DocType обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1522"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:DocType обязан содержать один
                атрибут @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент medService:DocType обязан содержать один атрибут
                @code с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент medService:DocType обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент medService:DocType обязан содержать один
                атрибут @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3818')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/effectiveTime"
                  priority="590"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3843']">
            <schxslt:rule pattern="d13e3843">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3843">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/effectiveTime не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(low) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(low) = 1</xsl:attribute>
                     <svrl:text>Элемент effectiveTime ОБЯЗАН содержать один [1..1] элемент
                low (ClinicalDocument/componentOf/encompassingEncounter/effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(high) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(high) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент effectiveTime МОЖЕТ содержать не более
                одного [0..1] элемента high
                (ClinicalDocument/componentOf/encompassingEncounter/effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3843')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/low"
                  priority="589"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3858']">
            <schxslt:rule pattern="d13e3858">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/low" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/low</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3858">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/low</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/low не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент low обязан содержать один атрибут @value с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3858')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/high"
                  priority="588"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3870']">
            <schxslt:rule pattern="d13e3870">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/high" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/high</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3870">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/high</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/componentOf/encompassingEncounter/effectiveTime/high не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент high обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3870')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component" priority="587" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3883']">
            <schxslt:rule pattern="d13e3883">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3883">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/component не должен иметь атрибут
                @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(structuredBody) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(structuredBody) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1]
                элемент structuredBody (ClinicalDocument/component) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3883')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody"
                  priority="586"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3895']">
            <schxslt:rule pattern="d13e3895">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3895">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент ClinicalDocument/component/structuredBody не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'HOSP']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'HOSP']) = 1</xsl:attribute>
                     <svrl:text>Элемент structuredBody
                ОБЯЗАН содержать один [1..1] элемент component
                (ClinicalDocument/component/structuredBody) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3895')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']"
                  priority="585"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3907']">
            <schxslt:rule pattern="d13e3907">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3907">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP'] не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3907')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section"
                  priority="584"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e3919']">
            <schxslt:rule pattern="d13e3919">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e3919">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '6042']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '6042']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'STATEADM']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'STATEADM']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'ANAM']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'ANAM']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'LANAM']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'LANAM']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'STATECUR']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'STATECUR']) = 1</xsl:attribute>
                     <svrl:text>Элемент section
                ОБЯЗАН содержать один [1..1] элемент component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'DGN']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'DGN']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН
                содержать один [1..1] элемент component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'RESCONS']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'RESCONS']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'CONSILIUMDECISION']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'CONSILIUMDECISION']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'COMMISSION']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'COMMISSION']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'RESLAB']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'RESLAB']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'RESINSTR']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'RESINSTR']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'GISTRESULT']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'GISTRESULT']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'RESOTHEXAM']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'RESOTHEXAM']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'SUR']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'SUR']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'VITALPARAM']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'VITALPARAM']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'SCORES']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'SCORES']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'DRUG']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'DRUG']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'ELSEPROCEDURE']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'ELSEPROCEDURE']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'POLT']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'POLT']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'RADIOTHERAPY']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'RADIOTHERAPY']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать произвольное количество [0..*] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'SPECIALTREAT']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'SPECIALTREAT']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'PLANACTIVE']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'PLANACTIVE']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'RESINFO']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'RESINFO']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'REGIME']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'REGIME']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'SERVICES']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'SERVICES']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'LINKDOCS']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'LINKDOCS']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e3919')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/code"
                  priority="583"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4020']">
            <schxslt:rule pattern="d13e4020">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4020">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'HOSP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'HOSP'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "HOSP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4020')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/title"
                  priority="582"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4045']">
            <schxslt:rule pattern="d13e4045">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4045">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4045')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/text"
                  priority="581"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4058']">
            <schxslt:rule pattern="d13e4058">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4058">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4058')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']"
                  priority="580"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4070']">
            <schxslt:rule pattern="d13e4070">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4070">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4070')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation"
                  priority="579"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4082']">
            <schxslt:rule pattern="d13e4082">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4082">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4082')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/code"
                  priority="578"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4103']">
            <schxslt:rule pattern="d13e4103">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4103">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6042')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6042'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6042"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4103')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[not(@nullFlavor)]"
                  priority="577"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4128']">
            <schxslt:rule pattern="d13e4128">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4128">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1496')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1496'</xsl:attribute>
                     <svrl:text>Элемент value должен содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1496"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент value МОЖЕТ содержать не более одного
                [0..1] элемента translation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']/observation/value)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4128')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[@nullFlavor]"
                  priority="576"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4156']">
            <schxslt:rule pattern="d13e4156">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4156">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4156')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value/translation"
                  priority="575"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4172']">
            <schxslt:rule pattern="d13e4172">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4172">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/entry[observation/code/@code = '6042']/observation/value/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/entry[observation/code/@code='6042']/observation/value/translation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.1057')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.1057'</xsl:attribute>
                     <svrl:text>Элемент translation обязан
                содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.1057"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @code с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4172')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']"
                  priority="574"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4197']">
            <schxslt:rule pattern="d13e4197">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4197">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4197')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section"
                  priority="573"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4209']">
            <schxslt:rule pattern="d13e4209">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4209">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '804']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '804']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН
                содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'COMPLNTS']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'COMPLNTS']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'PATOBJ']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'PATOBJ']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4209')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/code"
                  priority="572"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4237']">
            <schxslt:rule pattern="d13e4237">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4237">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'STATEADM')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'STATEADM'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "STATEADM"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4237')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/title"
                  priority="571"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4262']">
            <schxslt:rule pattern="d13e4262">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4262">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4262')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/text"
                  priority="570"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4274']">
            <schxslt:rule pattern="d13e4274">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4274">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4274')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']"
                  priority="569"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4287']">
            <schxslt:rule pattern="d13e4287">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4287">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4287')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation"
                  priority="568"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4299']">
            <schxslt:rule pattern="d13e4299">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4299">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4299')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/code"
                  priority="567"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4320']">
            <schxslt:rule pattern="d13e4320">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4320">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '804')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '804'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "804"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4320')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/value"
                  priority="566"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4345']">
            <schxslt:rule pattern="d13e4345">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4345">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/entry[observation/code/@code = '804']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/entry[observation/code/@code='804']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1006', '1.2.643.5.1.13.2.1.1.111'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1006', '1.2.643.5.1.13.2.1.1.111']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1006"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4345')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']"
                  priority="565"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4373']">
            <schxslt:rule pattern="d13e4373">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4373">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4373')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section"
                  priority="564"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4385']">
            <schxslt:rule pattern="d13e4385">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4385">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4385')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/code"
                  priority="563"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4404']">
            <schxslt:rule pattern="d13e4404">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4404">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'COMPLNTS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'COMPLNTS'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "COMPLNTS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4404')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/title"
                  priority="562"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4429']">
            <schxslt:rule pattern="d13e4429">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4429">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4429')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/text"
                  priority="561"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4441']">
            <schxslt:rule pattern="d13e4441">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4441">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'COMPLNTS']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='COMPLNTS']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4441')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']"
                  priority="560"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4453']">
            <schxslt:rule pattern="d13e4453">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4453">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4453')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section"
                  priority="559"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4465']">
            <schxslt:rule pattern="d13e4465">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4465">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4465')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/code"
                  priority="558"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4486']">
            <schxslt:rule pattern="d13e4486">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4486">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'PATOBJ')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'PATOBJ'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "PATOBJ"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4486')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/title"
                  priority="557"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4512']">
            <schxslt:rule pattern="d13e4512">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4512">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4512')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/text"
                  priority="556"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4524']">
            <schxslt:rule pattern="d13e4524">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4524">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4524')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']"
                  priority="555"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4536']">
            <schxslt:rule pattern="d13e4536">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4536">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4536')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation"
                  priority="554"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4548']">
            <schxslt:rule pattern="d13e4548">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4548">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(performer) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(performer) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент performer
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4548')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code"
                  priority="553"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4579']">
            <schxslt:rule pattern="d13e4579">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4579">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @nullFlavor
                со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4579')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]"
                  priority="552"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4588']">
            <schxslt:rule pattern="d13e4588">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4588">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4588')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime"
                  priority="551"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4598']">
            <schxslt:rule pattern="d13e4598">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4598">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4598')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer"
                  priority="550"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4610']">
            <schxslt:rule pattern="d13e4610">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4610">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(assignedEntity) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedEntity) = 1</xsl:attribute>
                     <svrl:text>Элемент performer ОБЯЗАН содержать один [1..1]
                элемент assignedEntity
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4610')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity"
                  priority="549"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4622']">
            <schxslt:rule pattern="d13e4622">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4622">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один [1..1]
                элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ содержать не более
                одного [0..1] элемента telecom
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedPerson) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedPerson) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один
                [1..1] элемент assignedPerson
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4622')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]"
                  priority="548"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4643']">
            <schxslt:rule pattern="d13e4643">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4643">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4643')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]"
                  priority="547"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4658']">
            <schxslt:rule pattern="d13e4658">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4658">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4658')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code"
                  priority="546"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4670']">
            <schxslt:rule pattern="d13e4670">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4670">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4670')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom"
                  priority="545"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4696']">
            <schxslt:rule pattern="d13e4696">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4696">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4696')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson"
                  priority="544"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4714']">
            <schxslt:rule pattern="d13e4714">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4714">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedPerson ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4714')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name"
                  priority="543"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4726']">
            <schxslt:rule pattern="d13e4726">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4726">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4726')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family"
                  priority="542"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4744']">
            <schxslt:rule pattern="d13e4744">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4744">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4744')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given"
                  priority="541"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4756']">
            <schxslt:rule pattern="d13e4756">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4756">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4756')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic"
                  priority="540"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4768']">
            <schxslt:rule pattern="d13e4768">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4768">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4768')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference"
                  priority="539"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4781']">
            <schxslt:rule pattern="d13e4781">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4781">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4781')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument"
                  priority="538"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4796']">
            <schxslt:rule pattern="d13e4796">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4796">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATEADM']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4796')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="537"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4817']">
            <schxslt:rule pattern="d13e4817">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4817">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4817')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="536"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4832']">
            <schxslt:rule pattern="d13e4832">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4832">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4832')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="535"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4844']">
            <schxslt:rule pattern="d13e4844">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4844">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4844')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="534"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4856']">
            <schxslt:rule pattern="d13e4856">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4856">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATEADM']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4856')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']"
                  priority="533"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4866']">
            <schxslt:rule pattern="d13e4866">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4866">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4866')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section"
                  priority="532"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4878']">
            <schxslt:rule pattern="d13e4878">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4878">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4878')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/code"
                  priority="531"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4896']">
            <schxslt:rule pattern="d13e4896">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4896">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'ANAM')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'ANAM'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "ANAM"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4896')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/title"
                  priority="530"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4921']">
            <schxslt:rule pattern="d13e4921">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4921">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4921')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/text"
                  priority="529"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4933']">
            <schxslt:rule pattern="d13e4933">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4933">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ANAM']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ANAM']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4933')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']"
                  priority="528"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4945']">
            <schxslt:rule pattern="d13e4945">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4945">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4945')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section"
                  priority="527"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4958']">
            <schxslt:rule pattern="d13e4958">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4958">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '7006']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '7006']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН
                содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '814']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '814']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '812']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '812']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '9052']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '9052']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '9053']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '9053']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ
                содержать произвольное количество [0..*] элементов entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4958')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/code"
                  priority="526"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e4995']">
            <schxslt:rule pattern="d13e4995">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e4995">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'LANAM')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'LANAM'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "LANAM"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e4995')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/title"
                  priority="525"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5020']">
            <schxslt:rule pattern="d13e5020">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5020">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5020')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/text"
                  priority="524"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5032']">
            <schxslt:rule pattern="d13e5032">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5032">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5032')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']"
                  priority="523"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5044']">
            <schxslt:rule pattern="d13e5044">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5044">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5044')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation"
                  priority="522"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5056']">
            <schxslt:rule pattern="d13e5056">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5056">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5056')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/code"
                  priority="521"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5078']">
            <schxslt:rule pattern="d13e5078">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5078">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '7006')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '7006'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "7006"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5078')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/value"
                  priority="520"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5103']">
            <schxslt:rule pattern="d13e5103">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5103">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '7006']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='7006']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5103')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']"
                  priority="519"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5118']">
            <schxslt:rule pattern="d13e5118">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5118">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5118')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation"
                  priority="518"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5130']">
            <schxslt:rule pattern="d13e5130">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5130">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '8043']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '8043']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '815']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '815']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                observation МОЖЕТ содержать не более одного [0..1] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '4058']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '4058']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент
                observation МОЖЕТ содержать произвольное количество [0..*] элементов
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '8040']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '8040']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5130')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/code"
                  priority="517"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5167']">
            <schxslt:rule pattern="d13e5167">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5167">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '814')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '814'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "814"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5167')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime[not(@nullFlavor)]"
                  priority="516"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5192']">
            <schxslt:rule pattern="d13e5192">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5192">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(low) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(low) = 1</xsl:attribute>
                     <svrl:text>Элемент effectiveTime ДОЛЖЕН содержать один [1..1] элемент
                low
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(high) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(high) = 1</xsl:attribute>
                     <svrl:text>Элемент effectiveTime ОБЯЗАН содержать один [1..1]
                элемент high
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/effectiveTime)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5192')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[not(@nullFlavor)]"
                  priority="515"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5205']">
            <schxslt:rule pattern="d13e5205">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5205">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент low должен содержать один атрибут @value с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5205')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[@nullFlavor]"
                  priority="514"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5214']">
            <schxslt:rule pattern="d13e5214">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5214">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/low[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5214')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/high"
                  priority="513"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5223']">
            <schxslt:rule pattern="d13e5223">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/high" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/high</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5223">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/effectiveTime/high</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/effectiveTime/high
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент high обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5223')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/value"
                  priority="512"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5235']">
            <schxslt:rule pattern="d13e5235">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5235">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1053', '1.2.643.5.1.13.2.1.1.702'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1053', '1.2.643.5.1.13.2.1.1.702']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1053"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5235')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']"
                  priority="511"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5263']">
            <schxslt:rule pattern="d13e5263">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5263">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5263')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation"
                  priority="510"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5278']">
            <schxslt:rule pattern="d13e5278">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5278">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5278')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/code"
                  priority="509"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5300']">
            <schxslt:rule pattern="d13e5300">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5300">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8043')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8043'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8043"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5300')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/value"
                  priority="508"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5325']">
            <schxslt:rule pattern="d13e5325">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5325">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8043']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8043']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'BL')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'BL'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "BL"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5325')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']"
                  priority="507"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5340']">
            <schxslt:rule pattern="d13e5340">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5340">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5340')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation"
                  priority="506"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5355']">
            <schxslt:rule pattern="d13e5355">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5355">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5355')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/code"
                  priority="505"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5376']">
            <schxslt:rule pattern="d13e5376">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5376">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '815')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '815'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "815"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5376')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/value"
                  priority="504"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5401']">
            <schxslt:rule pattern="d13e5401">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5401">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '815']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='815']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1041')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1041'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1041"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5401')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']"
                  priority="503"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5430']">
            <schxslt:rule pattern="d13e5430">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5430">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5430')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation"
                  priority="502"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5445']">
            <schxslt:rule pattern="d13e5445">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5445">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '4083']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '4083']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                observation ОБЯЗАН содержать один [1..1] элемент entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5445')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/code"
                  priority="501"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5473']">
            <schxslt:rule pattern="d13e5473">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5473">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '4058')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '4058'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "4058"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5473')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[not(@nullFlavor)]"
                  priority="500"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5498']">
            <schxslt:rule pattern="d13e5498">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5498">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime должен содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5498')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[@nullFlavor]"
                  priority="499"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5507']">
            <schxslt:rule pattern="d13e5507">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5507">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/effectiveTime[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5507')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value"
                  priority="498"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5516']">
            <schxslt:rule pattern="d13e5516">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5516">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'PQ')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'PQ'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "PQ"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@unit = '%')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit = '%'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @unit со
                значением "%"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) = 1</xsl:attribute>
                     <svrl:text>Элемент value ОБЯЗАН содержать один [1..1] элемент
                translation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/value)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5516')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value/translation"
                  priority="497"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5538']">
            <schxslt:rule pattern="d13e5538">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5538">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/value/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/value/translation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '53')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '53'</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @code со
                значением "53"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031']</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1358"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5538')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']"
                  priority="496"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5566']">
            <schxslt:rule pattern="d13e5566">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5566">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5566')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation"
                  priority="495"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5581']">
            <schxslt:rule pattern="d13e5581">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5581">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5581')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/code"
                  priority="494"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5602']">
            <schxslt:rule pattern="d13e5602">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5602">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '4083')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '4083'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "4083"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5602')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/value"
                  priority="493"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5627']">
            <schxslt:rule pattern="d13e5627">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5627">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '4058']/observation/entryRelationship[observation/code/@code = '4083']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='4058']/observation/entryRelationship[observation/code/@code='4083']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.325')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.325'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.325"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5627')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']"
                  priority="492"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5655']">
            <schxslt:rule pattern="d13e5655">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5655">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5655')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation"
                  priority="491"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5671']">
            <schxslt:rule pattern="d13e5671">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5671">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '8041']) = [0, 3])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '8041']) = [0, 3]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более трёх [0..3] элементов
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5671')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/code"
                  priority="490"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5699']">
            <schxslt:rule pattern="d13e5699">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5699">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8040')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8040'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8040"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5699')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/text"
                  priority="489"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5724']">
            <schxslt:rule pattern="d13e5724">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5724">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5724')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/value"
                  priority="488"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5736']">
            <schxslt:rule pattern="d13e5736">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5736">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1474', '1.2.643.5.1.13.2.1.1.169'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1474', '1.2.643.5.1.13.2.1.1.169']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1474"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5736')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']"
                  priority="487"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5764']">
            <schxslt:rule pattern="d13e5764">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5764">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5764')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation"
                  priority="486"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5779']">
            <schxslt:rule pattern="d13e5779">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5779">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5779')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/code"
                  priority="485"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5801']">
            <schxslt:rule pattern="d13e5801">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5801">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8041')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8041'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8041"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5801')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/value"
                  priority="484"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5826']">
            <schxslt:rule pattern="d13e5826">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5826">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '814']/observation/entryRelationship[observation/code/@code = '8040']/observation/entryRelationship[observation/code/@code = '8041']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='814']/observation/entryRelationship[observation/code/@code='8040']/observation/entryRelationship[observation/code/@code='8041']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.686')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.686'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.686"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5826')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']"
                  priority="483"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5854']">
            <schxslt:rule pattern="d13e5854">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5854">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5854')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation"
                  priority="482"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5866']">
            <schxslt:rule pattern="d13e5866">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5866">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5866')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/code"
                  priority="481"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5887']">
            <schxslt:rule pattern="d13e5887">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5887">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '812')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '812'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "812"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5887')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/value"
                  priority="480"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5912']">
            <schxslt:rule pattern="d13e5912">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5912">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '812']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='812']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1059', '1.2.643.5.1.13.2.1.1.713'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1059', '1.2.643.5.1.13.2.1.1.713']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1059"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5912')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']"
                  priority="479"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5941']">
            <schxslt:rule pattern="d13e5941">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5941">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5941')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation"
                  priority="478"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5953']">
            <schxslt:rule pattern="d13e5953">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5953">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5953')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/code"
                  priority="477"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5974']">
            <schxslt:rule pattern="d13e5974">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5974">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '9052')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '9052'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "9052"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5974')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/value"
                  priority="476"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e5999']">
            <schxslt:rule pattern="d13e5999">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e5999">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9052']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9052']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1060', '1.2.643.5.1.13.2.1.1.714'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1060', '1.2.643.5.1.13.2.1.1.714']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1060"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e5999')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']"
                  priority="475"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6027']">
            <schxslt:rule pattern="d13e6027">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6027">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6027')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation"
                  priority="474"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6039']">
            <schxslt:rule pattern="d13e6039">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6039">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6039')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/code"
                  priority="473"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6061']">
            <schxslt:rule pattern="d13e6061">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6061">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1038')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1038'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1038"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6061')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/text"
                  priority="472"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6086']">
            <schxslt:rule pattern="d13e6086">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6086">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1038']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1038']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6086')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']"
                  priority="471"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6098']">
            <schxslt:rule pattern="d13e6098">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6098">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6098')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation"
                  priority="470"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6110']">
            <schxslt:rule pattern="d13e6110">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6110">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6110')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/code"
                  priority="469"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6131']">
            <schxslt:rule pattern="d13e6131">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6131">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '9053')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '9053'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "9053"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6131')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/value"
                  priority="468"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6156']">
            <schxslt:rule pattern="d13e6156">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6156">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LANAM']/section/entry[observation/code/@code = '9053']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LANAM']/section/entry[observation/code/@code='9053']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1058', '1.2.643.5.1.13.2.1.1.701'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1058', '1.2.643.5.1.13.2.1.1.701']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1058"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6156')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']"
                  priority="467"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6185']">
            <schxslt:rule pattern="d13e6185">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6185">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6185')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section"
                  priority="466"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6197']">
            <schxslt:rule pattern="d13e6197">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6197">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '804']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '804']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН
                содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '8055']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '8055']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '8056']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '8056']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '8057']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '8057']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'COMPLNTS']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'COMPLNTS']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'PATOBJ']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'PATOBJ']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6197')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/code"
                  priority="465"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6234']">
            <schxslt:rule pattern="d13e6234">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6234">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'STATECUR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'STATECUR'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "STATECUR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6234')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/title"
                  priority="464"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6259']">
            <schxslt:rule pattern="d13e6259">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6259">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6259')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/text"
                  priority="463"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6271']">
            <schxslt:rule pattern="d13e6271">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6271">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6271')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']"
                  priority="462"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6283']">
            <schxslt:rule pattern="d13e6283">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6283">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6283')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation"
                  priority="461"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6296']">
            <schxslt:rule pattern="d13e6296">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6296">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6296')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/code"
                  priority="460"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6317']">
            <schxslt:rule pattern="d13e6317">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6317">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '804')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '804'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "804"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6317')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/value"
                  priority="459"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6342']">
            <schxslt:rule pattern="d13e6342">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6342">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '804']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='804']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1006', '1.2.643.5.1.13.2.1.1.111'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1006', '1.2.643.5.1.13.2.1.1.111']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1006"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6342')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']"
                  priority="458"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6370']">
            <schxslt:rule pattern="d13e6370">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6370">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6370')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation"
                  priority="457"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6382']">
            <schxslt:rule pattern="d13e6382">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6382">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6382')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/code"
                  priority="456"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6403']">
            <schxslt:rule pattern="d13e6403">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6403">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8055')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8055'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8055"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6403')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/value"
                  priority="455"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6429']">
            <schxslt:rule pattern="d13e6429">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6429">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8055']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8055']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6429')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']"
                  priority="454"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6444']">
            <schxslt:rule pattern="d13e6444">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6444">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6444')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation"
                  priority="453"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6456']">
            <schxslt:rule pattern="d13e6456">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6456">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6456')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/code"
                  priority="452"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6477']">
            <schxslt:rule pattern="d13e6477">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6477">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8056')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8056'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8056"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6477')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/value"
                  priority="451"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6502']">
            <schxslt:rule pattern="d13e6502">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6502">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8056']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8056']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6502')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']"
                  priority="450"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6517']">
            <schxslt:rule pattern="d13e6517">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6517">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6517')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation"
                  priority="449"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6530']">
            <schxslt:rule pattern="d13e6530">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6530">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6530')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/code"
                  priority="448"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6551']">
            <schxslt:rule pattern="d13e6551">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6551">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8057')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8057'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8057"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6551')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/value"
                  priority="447"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6576']">
            <schxslt:rule pattern="d13e6576">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6576">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/entry[observation/code/@code = '8057']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/entry[observation/code/@code='8057']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6576')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']"
                  priority="446"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6591']">
            <schxslt:rule pattern="d13e6591">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6591">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6591')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section"
                  priority="445"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6603']">
            <schxslt:rule pattern="d13e6603">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6603">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6603')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/code"
                  priority="444"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6621']">
            <schxslt:rule pattern="d13e6621">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6621">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'COMPLNTS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'COMPLNTS'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "COMPLNTS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6621')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/title"
                  priority="443"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6647']">
            <schxslt:rule pattern="d13e6647">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6647">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6647')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/text"
                  priority="442"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6659']">
            <schxslt:rule pattern="d13e6659">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6659">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'COMPLNTS']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='COMPLNTS']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6659')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']"
                  priority="441"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6671']">
            <schxslt:rule pattern="d13e6671">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6671">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6671')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section"
                  priority="440"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6683']">
            <schxslt:rule pattern="d13e6683">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6683">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '12075']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '12075']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6683')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/code"
                  priority="439"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6708']">
            <schxslt:rule pattern="d13e6708">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6708">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'PATOBJ')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'PATOBJ'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "PATOBJ"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6708')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/title"
                  priority="438"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6733']">
            <schxslt:rule pattern="d13e6733">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6733">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6733')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/text"
                  priority="437"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6746']">
            <schxslt:rule pattern="d13e6746">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6746">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6746')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']"
                  priority="436"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6758']">
            <schxslt:rule pattern="d13e6758">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6758">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6758')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation"
                  priority="435"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6770']">
            <schxslt:rule pattern="d13e6770">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6770">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(performer) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(performer) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент performer
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6770')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code"
                  priority="434"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6801']">
            <schxslt:rule pattern="d13e6801">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6801">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @nullFlavor
                со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6801')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]"
                  priority="433"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6810']">
            <schxslt:rule pattern="d13e6810">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6810">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6810')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime"
                  priority="432"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6819']">
            <schxslt:rule pattern="d13e6819">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6819">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6819')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer"
                  priority="431"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6832']">
            <schxslt:rule pattern="d13e6832">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6832">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(assignedEntity) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedEntity) = 1</xsl:attribute>
                     <svrl:text>Элемент performer ОБЯЗАН содержать один [1..1]
                элемент assignedEntity
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6832')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity"
                  priority="430"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6844']">
            <schxslt:rule pattern="d13e6844">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6844">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один [1..1]
                элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ содержать не более
                одного [0..1] элемента telecom
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedPerson) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedPerson) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один
                [1..1] элемент assignedPerson
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6844')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]"
                  priority="429"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6865']">
            <schxslt:rule pattern="d13e6865">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6865">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6865')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]"
                  priority="428"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6880']">
            <schxslt:rule pattern="d13e6880">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6880">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6880')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code"
                  priority="427"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6892']">
            <schxslt:rule pattern="d13e6892">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6892">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6892')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom"
                  priority="426"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6917']">
            <schxslt:rule pattern="d13e6917">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6917">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6917')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson"
                  priority="425"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6936']">
            <schxslt:rule pattern="d13e6936">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6936">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedPerson ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6936')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name"
                  priority="424"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6948']">
            <schxslt:rule pattern="d13e6948">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6948">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6948')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family"
                  priority="423"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6966']">
            <schxslt:rule pattern="d13e6966">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6966">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6966')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given"
                  priority="422"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6978']">
            <schxslt:rule pattern="d13e6978">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6978">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6978')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic"
                  priority="421"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e6990']">
            <schxslt:rule pattern="d13e6990">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e6990">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e6990')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference"
                  priority="420"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7002']">
            <schxslt:rule pattern="d13e7002">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7002">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7002')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument"
                  priority="419"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7018']">
            <schxslt:rule pattern="d13e7018">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7018">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7018')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="418"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7039']">
            <schxslt:rule pattern="d13e7039">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7039">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7039')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="417"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7054']">
            <schxslt:rule pattern="d13e7054">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7054">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7054')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="416"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7066']">
            <schxslt:rule pattern="d13e7066">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7066">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7066')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="415"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7078']">
            <schxslt:rule pattern="d13e7078">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7078">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7078')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']"
                  priority="414"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7087']">
            <schxslt:rule pattern="d13e7087">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7087">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7087')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation"
                  priority="413"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7100']">
            <schxslt:rule pattern="d13e7100">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7100">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7100')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/code"
                  priority="412"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7121']">
            <schxslt:rule pattern="d13e7121">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7121">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '12075')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '12075'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "12075"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7121')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/value"
                  priority="411"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7146']">
            <schxslt:rule pattern="d13e7146">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7146">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'STATECUR']/section/component[section/code/@code = 'PATOBJ']/section/entry[observation/code/@code = '12075']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='STATECUR']/section/component[section/code/@code='PATOBJ']/section/entry[observation/code/@code='12075']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7146')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']"
                  priority="410"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7161']">
            <schxslt:rule pattern="d13e7161">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7161">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7161')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section"
                  priority="409"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7173']">
            <schxslt:rule pattern="d13e7173">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7173">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']) &gt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']) &gt;= 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать не менее одного [1..*] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7173')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/code"
                  priority="408"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7194']">
            <schxslt:rule pattern="d13e7194">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7194">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'DGN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'DGN'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "DGN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7194')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/title"
                  priority="407"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7220']">
            <schxslt:rule pattern="d13e7220">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7220">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7220')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/text"
                  priority="406"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7232']">
            <schxslt:rule pattern="d13e7232">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7232">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7232')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']"
                  priority="405"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7244']">
            <schxslt:rule pattern="d13e7244">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7244">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7244')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation"
                  priority="404"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7256']">
            <schxslt:rule pattern="d13e7256">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7256">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не
                более одного [0..1] элемента effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '7026']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '7026']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                observation ОБЯЗАН содержать один [1..1] элемент entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '12014']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '12014']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '823']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '823']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                observation МОЖЕТ содержать не более одного [0..1] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '824']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '824']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                observation МОЖЕТ содержать не более одного [0..1] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '12120']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '12120']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6047']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6047']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6048']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6048']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6049']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6049']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6050']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6050']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '4072']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '4072']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7256')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/code"
                  priority="403"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7315']">
            <schxslt:rule pattern="d13e7315">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7315">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1077', '1.2.643.5.1.13.2.1.1.1504.4'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1077', '1.2.643.5.1.13.2.1.1.1504.4']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1077"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7315')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/text"
                  priority="402"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7340']">
            <schxslt:rule pattern="d13e7340">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7340">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7340')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/effectiveTime"
                  priority="401"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7353']">
            <schxslt:rule pattern="d13e7353">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7353">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7353')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/value"
                  priority="400"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7365']">
            <schxslt:rule pattern="d13e7365">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7365">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1005', '1.2.643.5.1.13.2.1.1.641', '1.2.643.5.1.13.2.1.1.718'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1005', '1.2.643.5.1.13.2.1.1.641', '1.2.643.5.1.13.2.1.1.718']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1005"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7365')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']"
                  priority="399"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7393']">
            <schxslt:rule pattern="d13e7393">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7393">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='7026']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='7026'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7393')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation"
                  priority="398"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7408']">
            <schxslt:rule pattern="d13e7408">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7408">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='7026']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='7026']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='7026']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7408')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/code"
                  priority="397"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7429']">
            <schxslt:rule pattern="d13e7429">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7429">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='7026']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '7026')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '7026'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "7026"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7429')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[not(@nullFlavor)]"
                  priority="396"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7454']">
            <schxslt:rule pattern="d13e7454">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7454">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.795', '1.2.643.5.1.13.13.11.1076'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.795', '1.2.643.5.1.13.13.11.1076']</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.795"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7454')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[@nullFlavor]"
                  priority="395"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7480']">
            <schxslt:rule pattern="d13e7480">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7480">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '7026']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7480')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']"
                  priority="394"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7495']">
            <schxslt:rule pattern="d13e7495">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7495">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12014']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12014'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7495')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation"
                  priority="393"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7510']">
            <schxslt:rule pattern="d13e7510">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7510">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12014']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12014']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12014']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7510')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/code"
                  priority="392"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7531']">
            <schxslt:rule pattern="d13e7531">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7531">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12014']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '12014')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '12014'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "12014"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7531')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[not(@nullFlavor)]"
                  priority="391"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7556']">
            <schxslt:rule pattern="d13e7556">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7556">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1049', '1.2.643.5.1.13.2.1.1.586'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1049', '1.2.643.5.1.13.2.1.1.586']</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1049"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7556')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[@nullFlavor]"
                  priority="390"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7581']">
            <schxslt:rule pattern="d13e7581">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7581">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12014']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7581')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']"
                  priority="389"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7597']">
            <schxslt:rule pattern="d13e7597">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7597">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7597')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation"
                  priority="388"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7612']">
            <schxslt:rule pattern="d13e7612">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7612">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7612')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/code"
                  priority="387"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7633']">
            <schxslt:rule pattern="d13e7633">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7633">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '823')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '823'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "823"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7633')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/value"
                  priority="386"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7658']">
            <schxslt:rule pattern="d13e7658">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7658">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '823']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='823']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1005', '1.2.643.5.1.13.2.1.1.641', '1.2.643.5.1.13.2.1.1.718'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1005', '1.2.643.5.1.13.2.1.1.641', '1.2.643.5.1.13.2.1.1.718']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1005"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7658')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']"
                  priority="385"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7686']">
            <schxslt:rule pattern="d13e7686">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7686">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7686')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation"
                  priority="384"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7701']">
            <schxslt:rule pattern="d13e7701">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7701">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7701')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/code"
                  priority="383"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7723']">
            <schxslt:rule pattern="d13e7723">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7723">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '824')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '824'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "824"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7723')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/value"
                  priority="382"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7748']">
            <schxslt:rule pattern="d13e7748">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7748">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '824']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='824']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1036', '1.2.643.5.1.13.2.1.1.105'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1036', '1.2.643.5.1.13.2.1.1.105']</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1036"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7748')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']"
                  priority="381"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7776']">
            <schxslt:rule pattern="d13e7776">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7776">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7776')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation"
                  priority="380"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7791']">
            <schxslt:rule pattern="d13e7791">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7791">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не
                более одного [0..1] элемента effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '12393']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '12393']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7791')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/code"
                  priority="379"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7819']">
            <schxslt:rule pattern="d13e7819">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7819">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '12120')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '12120'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "12120"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7819')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/effectiveTime"
                  priority="378"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7844']">
            <schxslt:rule pattern="d13e7844">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7844">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7844')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/value"
                  priority="377"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7857']">
            <schxslt:rule pattern="d13e7857">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7857">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.770')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.770'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.770"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7857')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']"
                  priority="376"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7885']">
            <schxslt:rule pattern="d13e7885">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7885">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7885')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation"
                  priority="375"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7900']">
            <schxslt:rule pattern="d13e7900">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7900">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7900')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/code"
                  priority="374"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7921']">
            <schxslt:rule pattern="d13e7921">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7921">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '12393')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '12393'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "12393"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7921')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/value"
                  priority="373"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7946']">
            <schxslt:rule pattern="d13e7946">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7946">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '12120']/observation/entryRelationship[observation/code/@code = '12393']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='12120']/observation/entryRelationship[observation/code/@code='12393']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'INT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'INT'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type
                со значением "INT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7946')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']"
                  priority="372"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7961']">
            <schxslt:rule pattern="d13e7961">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7961">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7961')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation"
                  priority="371"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7977']">
            <schxslt:rule pattern="d13e7977">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7977">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7977')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/code"
                  priority="370"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e7998']">
            <schxslt:rule pattern="d13e7998">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e7998">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6047')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6047'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6047"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e7998')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/value"
                  priority="369"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8023']">
            <schxslt:rule pattern="d13e8023">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8023">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6047']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6047']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.547')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.547'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.547"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8023')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']"
                  priority="368"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8051']">
            <schxslt:rule pattern="d13e8051">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8051">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8051')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation"
                  priority="367"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8066']">
            <schxslt:rule pattern="d13e8066">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8066">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8066')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/code"
                  priority="366"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8087']">
            <schxslt:rule pattern="d13e8087">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8087">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6048')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6048'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6048"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8087')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/value"
                  priority="365"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8113']">
            <schxslt:rule pattern="d13e8113">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8113">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6048']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6048']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.547')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.547'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.547"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8113')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']"
                  priority="364"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8141']">
            <schxslt:rule pattern="d13e8141">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8141">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8141')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation"
                  priority="363"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8156']">
            <schxslt:rule pattern="d13e8156">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8156">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8156')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/code"
                  priority="362"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8177']">
            <schxslt:rule pattern="d13e8177">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8177">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6049')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6049'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6049"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8177')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/value"
                  priority="361"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8202']">
            <schxslt:rule pattern="d13e8202">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8202">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6049']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6049']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.547')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.547'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.547"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8202')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']"
                  priority="360"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8230']">
            <schxslt:rule pattern="d13e8230">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8230">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8230')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation"
                  priority="359"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8246']">
            <schxslt:rule pattern="d13e8246">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8246">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8246')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/code"
                  priority="358"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8267']">
            <schxslt:rule pattern="d13e8267">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8267">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6050')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6050'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6050"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8267')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/value"
                  priority="357"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8292']">
            <schxslt:rule pattern="d13e8292">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8292">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '6050']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='6050']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.546')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.546'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.546"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8292')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']"
                  priority="356"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8320']">
            <schxslt:rule pattern="d13e8320">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8320">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8320')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation"
                  priority="355"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8335']">
            <schxslt:rule pattern="d13e8335">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8335">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8335')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/code"
                  priority="354"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8356']">
            <schxslt:rule pattern="d13e8356">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8356">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '4072')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '4072'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "4072"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8356')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/value"
                  priority="353"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8382']">
            <schxslt:rule pattern="d13e8382">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8382">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DGN']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code = '4072']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DGN']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1077']/observation/entryRelationship[observation/code/@code='4072']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8382')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']"
                  priority="352"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8397']">
            <schxslt:rule pattern="d13e8397">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8397">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8397')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section"
                  priority="351"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8409']">
            <schxslt:rule pattern="d13e8409">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8409">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8409')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/code"
                  priority="350"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8430']">
            <schxslt:rule pattern="d13e8430">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8430">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RESCONS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RESCONS'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "RESCONS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8430')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/title"
                  priority="349"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8455']">
            <schxslt:rule pattern="d13e8455">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8455">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8455')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/text"
                  priority="348"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8467']">
            <schxslt:rule pattern="d13e8467">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8467">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8467')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']"
                  priority="347"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8480']">
            <schxslt:rule pattern="d13e8480">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8480">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8480')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation"
                  priority="346"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8492']">
            <schxslt:rule pattern="d13e8492">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8492">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(performer) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(performer) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент performer
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8492')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code"
                  priority="345"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8523']">
            <schxslt:rule pattern="d13e8523">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8523">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @nullFlavor
                со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8523')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]"
                  priority="344"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8532']">
            <schxslt:rule pattern="d13e8532">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8532">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/text[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8532')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime"
                  priority="343"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8541']">
            <schxslt:rule pattern="d13e8541">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8541">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8541')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer"
                  priority="342"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8553']">
            <schxslt:rule pattern="d13e8553">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8553">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(assignedEntity) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedEntity) = 1</xsl:attribute>
                     <svrl:text>Элемент performer ОБЯЗАН содержать один [1..1]
                элемент assignedEntity
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8553')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity"
                  priority="341"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8566']">
            <schxslt:rule pattern="d13e8566">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8566">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один [1..1]
                элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ содержать не более
                одного [0..1] элемента telecom
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedPerson) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedPerson) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один
                [1..1] элемент assignedPerson
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8566')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]"
                  priority="340"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8587']">
            <schxslt:rule pattern="d13e8587">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8587">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8587')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]"
                  priority="339"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8602']">
            <schxslt:rule pattern="d13e8602">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8602">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8602')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code"
                  priority="338"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8614']">
            <schxslt:rule pattern="d13e8614">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8614">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8614')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom"
                  priority="337"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8639']">
            <schxslt:rule pattern="d13e8639">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8639">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/telecom
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8639')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson"
                  priority="336"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8657']">
            <schxslt:rule pattern="d13e8657">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8657">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedPerson ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8657')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name"
                  priority="335"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8670']">
            <schxslt:rule pattern="d13e8670">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8670">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8670')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family"
                  priority="334"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8688']">
            <schxslt:rule pattern="d13e8688">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8688">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/family
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8688')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given"
                  priority="333"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8700']">
            <schxslt:rule pattern="d13e8700">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8700">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/given
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8700')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic"
                  priority="332"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8712']">
            <schxslt:rule pattern="d13e8712">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8712">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8712')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference"
                  priority="331"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8724']">
            <schxslt:rule pattern="d13e8724">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8724">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8724')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument"
                  priority="330"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8739']">
            <schxslt:rule pattern="d13e8739">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8739">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem='1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8739')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="329"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8761']">
            <schxslt:rule pattern="d13e8761">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8761">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8761')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="328"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8776']">
            <schxslt:rule pattern="d13e8776">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8776">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8776')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="327"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8788']">
            <schxslt:rule pattern="d13e8788">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8788">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8788')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="326"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8800']">
            <schxslt:rule pattern="d13e8800">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8800">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESCONS']/section/entry[observation/performer/assignedEntity/code/@codeSystem = '1.2.643.5.1.13.13.11.1002']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8800')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']"
                  priority="325"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8809']">
            <schxslt:rule pattern="d13e8809">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8809">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8809')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section"
                  priority="324"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8821']">
            <schxslt:rule pattern="d13e8821">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8821">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8821')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/code"
                  priority="323"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8843']">
            <schxslt:rule pattern="d13e8843">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8843">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'CONSILIUMDECISION')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'CONSILIUMDECISION'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @code со значением "CONSILIUMDECISION"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8843')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/title"
                  priority="322"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8868']">
            <schxslt:rule pattern="d13e8868">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8868">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8868')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/text"
                  priority="321"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8880']">
            <schxslt:rule pattern="d13e8880">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8880">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8880')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']"
                  priority="320"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8892']">
            <schxslt:rule pattern="d13e8892">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8892">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8892')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation"
                  priority="319"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8904']">
            <schxslt:rule pattern="d13e8904">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8904">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6026']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6026']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                observation ОБЯЗАН содержать один [1..1] элемент entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8904')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/code"
                  priority="318"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8935']">
            <schxslt:rule pattern="d13e8935">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8935">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.780')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.780'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.780"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8935')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/text"
                  priority="317"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8961']">
            <schxslt:rule pattern="d13e8961">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8961">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8961')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/effectiveTime"
                  priority="316"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8973']">
            <schxslt:rule pattern="d13e8973">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8973">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8973')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']"
                  priority="315"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e8985']">
            <schxslt:rule pattern="d13e8985">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e8985">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e8985')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation"
                  priority="314"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9000']">
            <schxslt:rule pattern="d13e9000">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9000">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9000')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/code"
                  priority="313"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9025']">
            <schxslt:rule pattern="d13e9025">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9025">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6026')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6026'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6026"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9025')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/text"
                  priority="312"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9050']">
            <schxslt:rule pattern="d13e9050">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9050">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9050')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/value"
                  priority="311"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9063']">
            <schxslt:rule pattern="d13e9063">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9063">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code = '6026']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/entryRelationship[observation/code/@code='6026']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1506')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1506'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1506"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9063')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference"
                  priority="310"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9091']">
            <schxslt:rule pattern="d13e9091">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9091">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9091')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument"
                  priority="309"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9106']">
            <schxslt:rule pattern="d13e9106">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9106">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='CONSILIUMDECISION']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9106')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="308"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9127']">
            <schxslt:rule pattern="d13e9127">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9127">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9127')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="307"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9142']">
            <schxslt:rule pattern="d13e9142">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9142">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9142')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="306"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9154']">
            <schxslt:rule pattern="d13e9154">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9154">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9154')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="305"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9167']">
            <schxslt:rule pattern="d13e9167">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9167">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'CONSILIUMDECISION']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.780']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9167')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']"
                  priority="304"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9176']">
            <schxslt:rule pattern="d13e9176">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9176">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9176')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section"
                  priority="303"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9188']">
            <schxslt:rule pattern="d13e9188">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9188">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/entryRelationship/observation/code/@code = '12475']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/entryRelationship/observation/code/@code = '12475']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9188')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/code"
                  priority="302"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9209']">
            <schxslt:rule pattern="d13e9209">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9209">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'COMMISSION')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'COMMISSION'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "COMMISSION"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9209')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/title"
                  priority="301"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9234']">
            <schxslt:rule pattern="d13e9234">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9234">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9234')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/text"
                  priority="300"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9246']">
            <schxslt:rule pattern="d13e9246">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9246">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9246')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']"
                  priority="299"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9259']">
            <schxslt:rule pattern="d13e9259">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9259">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9259')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation"
                  priority="298"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9271']">
            <schxslt:rule pattern="d13e9271">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9271">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '12475']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '12475']) = 1</xsl:attribute>
                     <svrl:text>Элемент
                observation ОБЯЗАН содержать один [1..1] элемент entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9271')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[not(@nullFlavor)]"
                  priority="297"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9302']">
            <schxslt:rule pattern="d13e9302">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9302">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.941')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.941'</xsl:attribute>
                     <svrl:text>Элемент code должен содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.941"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(originalText) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(originalText) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент code МОЖЕТ содержать не более одного
                [0..1] элемента originalText
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/code)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9302')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[@nullFlavor]"
                  priority="296"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9327']">
            <schxslt:rule pattern="d13e9327">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9327">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9327')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code/originalText"
                  priority="295"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9339']">
            <schxslt:rule pattern="d13e9339">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code/originalText" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code/originalText</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9339">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/code/originalText</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/code/originalText
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент originalText должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9339')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/text"
                  priority="294"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9351']">
            <schxslt:rule pattern="d13e9351">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9351">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9351')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/effectiveTime"
                  priority="293"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9364']">
            <schxslt:rule pattern="d13e9364">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9364">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9364')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']"
                  priority="292"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9376']">
            <schxslt:rule pattern="d13e9376">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9376">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9376')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation"
                  priority="291"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9391']">
            <schxslt:rule pattern="d13e9391">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9391">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9391')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/code"
                  priority="290"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9416']">
            <schxslt:rule pattern="d13e9416">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9416">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '12475')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '12475'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "12475"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9416')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/text"
                  priority="289"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9441']">
            <schxslt:rule pattern="d13e9441">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9441">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9441')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/value"
                  priority="288"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9453']">
            <schxslt:rule pattern="d13e9453">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9453">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/entryRelationship[observation/code/@code = '12475']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/entryRelationship[observation/code/@code='12475']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1506')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1506'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1506"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9453')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference"
                  priority="287"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9482']">
            <schxslt:rule pattern="d13e9482">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9482">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9482')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument"
                  priority="286"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9497']">
            <schxslt:rule pattern="d13e9497">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9497">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code='12475']/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9497')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="285"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9518']">
            <schxslt:rule pattern="d13e9518">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9518">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9518')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="284"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9533']">
            <schxslt:rule pattern="d13e9533">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9533">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9533')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="283"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9545']">
            <schxslt:rule pattern="d13e9545">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9545">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9545')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="282"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9557']">
            <schxslt:rule pattern="d13e9557">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9557">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'COMMISSION']/section/entry[observation/entryRelationship/observation/code/@code = '12475']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9557')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']"
                  priority="281"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9567']">
            <schxslt:rule pattern="d13e9567">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9567">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9567')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section"
                  priority="280"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9579']">
            <schxslt:rule pattern="d13e9579">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9579">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9579')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/code"
                  priority="279"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9600']">
            <schxslt:rule pattern="d13e9600">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9600">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RESLAB')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RESLAB'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "RESLAB"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9600')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/title"
                  priority="278"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9625']">
            <schxslt:rule pattern="d13e9625">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9625">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9625')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/text"
                  priority="277"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9637']">
            <schxslt:rule pattern="d13e9637">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9637">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9637')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry"
                  priority="276"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9649']">
            <schxslt:rule pattern="d13e9649">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9649">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9649')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation"
                  priority="275"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9662']">
            <schxslt:rule pattern="d13e9662">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9662">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9662')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[not(@nullFlavor)]"
                  priority="274"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9690']">
            <schxslt:rule pattern="d13e9690">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9690">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1437', '1.2.643.5.1.13.13.11.10043'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1437', '1.2.643.5.1.13.13.11.10043']</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1437"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(originalText) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(originalText) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент code МОЖЕТ содержать не более одного
                [0..1] элемента originalText
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/code)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9690')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[@nullFlavor]"
                  priority="273"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9715']">
            <schxslt:rule pattern="d13e9715">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9715">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9715')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code/originalText"
                  priority="272"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9727']">
            <schxslt:rule pattern="d13e9727">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code/originalText" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code/originalText</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9727">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/code/originalText</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/code/originalText
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент originalText должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9727')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/text"
                  priority="271"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9739']">
            <schxslt:rule pattern="d13e9739">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9739">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9739')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/effectiveTime"
                  priority="270"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9751']">
            <schxslt:rule pattern="d13e9751">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9751">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9751')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference"
                  priority="269"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9764']">
            <schxslt:rule pattern="d13e9764">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9764">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9764')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument"
                  priority="268"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9779']">
            <schxslt:rule pattern="d13e9779">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9779">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESLAB']/section/entry/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9779')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="267"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9800']">
            <schxslt:rule pattern="d13e9800">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9800">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9800')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="266"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9815']">
            <schxslt:rule pattern="d13e9815">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9815">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9815')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="265"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9827']">
            <schxslt:rule pattern="d13e9827">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9827">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9827')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="264"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9839']">
            <schxslt:rule pattern="d13e9839">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9839">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESLAB']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9839')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']"
                  priority="263"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9849']">
            <schxslt:rule pattern="d13e9849">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9849">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9849')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section"
                  priority="262"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9861']">
            <schxslt:rule pattern="d13e9861">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9861">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9861')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/code"
                  priority="261"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9882']">
            <schxslt:rule pattern="d13e9882">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9882">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RESINSTR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RESINSTR'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "RESINSTR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9882')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/title"
                  priority="260"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9907']">
            <schxslt:rule pattern="d13e9907">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9907">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9907')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/text"
                  priority="259"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9919']">
            <schxslt:rule pattern="d13e9919">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9919">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9919')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']"
                  priority="258"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9931']">
            <schxslt:rule pattern="d13e9931">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9931">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9931')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation"
                  priority="257"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9944']">
            <schxslt:rule pattern="d13e9944">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9944">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9944')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/code"
                  priority="256"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9972']">
            <schxslt:rule pattern="d13e9972">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9972">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1471')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1471'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1471"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9972')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/text"
                  priority="255"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e9997']">
            <schxslt:rule pattern="d13e9997">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e9997">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e9997')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/effectiveTime"
                  priority="254"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10009']">
            <schxslt:rule pattern="d13e10009">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10009">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10009')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference"
                  priority="253"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10021']">
            <schxslt:rule pattern="d13e10021">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10021">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10021')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument"
                  priority="252"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10036']">
            <schxslt:rule pattern="d13e10036">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10036">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINSTR']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10036')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="251"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10058']">
            <schxslt:rule pattern="d13e10058">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10058">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10058')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="250"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10073']">
            <schxslt:rule pattern="d13e10073">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10073">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10073')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="249"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10085']">
            <schxslt:rule pattern="d13e10085">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10085">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10085')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="248"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10097']">
            <schxslt:rule pattern="d13e10097">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10097">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINSTR']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1471']/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10097')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']"
                  priority="247"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10106']">
            <schxslt:rule pattern="d13e10106">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10106">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10106')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section"
                  priority="246"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10118']">
            <schxslt:rule pattern="d13e10118">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10118">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10118')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/code"
                  priority="245"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10140']">
            <schxslt:rule pattern="d13e10140">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10140">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'GISTRESULT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'GISTRESULT'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "GISTRESULT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10140')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/title"
                  priority="244"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10165']">
            <schxslt:rule pattern="d13e10165">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10165">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10165')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/text"
                  priority="243"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10177']">
            <schxslt:rule pattern="d13e10177">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10177">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10177')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry"
                  priority="242"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10189']">
            <schxslt:rule pattern="d13e10189">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10189">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10189')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation"
                  priority="241"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10201']">
            <schxslt:rule pattern="d13e10201">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10201">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10201')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/code"
                  priority="240"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10229']">
            <schxslt:rule pattern="d13e10229">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10229">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NI')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NI'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @nullFlavor
                со значением "NI"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10229')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/text"
                  priority="239"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10239']">
            <schxslt:rule pattern="d13e10239">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10239">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10239')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/effectiveTime"
                  priority="238"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10251']">
            <schxslt:rule pattern="d13e10251">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10251">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10251')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference"
                  priority="237"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10263']">
            <schxslt:rule pattern="d13e10263">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10263">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10263')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument"
                  priority="236"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10278']">
            <schxslt:rule pattern="d13e10278">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10278">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='GISTRESULT']/section/entry/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10278')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="235"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10299']">
            <schxslt:rule pattern="d13e10299">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10299">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10299')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="234"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10314']">
            <schxslt:rule pattern="d13e10314">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10314">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10314')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="233"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10327']">
            <schxslt:rule pattern="d13e10327">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10327">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10327')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="232"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10339']">
            <schxslt:rule pattern="d13e10339">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10339">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'GISTRESULT']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10339')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']"
                  priority="231"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10348']">
            <schxslt:rule pattern="d13e10348">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10348">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10348')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section"
                  priority="230"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10360']">
            <schxslt:rule pattern="d13e10360">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10360">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10360')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/code"
                  priority="229"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10378']">
            <schxslt:rule pattern="d13e10378">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10378">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RESOTHEXAM')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RESOTHEXAM'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "RESOTHEXAM"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10378')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/title"
                  priority="228"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10403']">
            <schxslt:rule pattern="d13e10403">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10403">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10403')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/text"
                  priority="227"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10416']">
            <schxslt:rule pattern="d13e10416">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10416">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESOTHEXAM']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESOTHEXAM']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10416')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']"
                  priority="226"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10428']">
            <schxslt:rule pattern="d13e10428">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10428">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10428')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section"
                  priority="225"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10440']">
            <schxslt:rule pattern="d13e10440">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10440">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10440')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/code"
                  priority="224"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10461']">
            <schxslt:rule pattern="d13e10461">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10461">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'SUR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'SUR'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "SUR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10461')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/title"
                  priority="223"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10486']">
            <schxslt:rule pattern="d13e10486">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10486">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10486')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/text"
                  priority="222"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10498']">
            <schxslt:rule pattern="d13e10498">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10498">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10498')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry"
                  priority="221"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10511']">
            <schxslt:rule pattern="d13e10511">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10511">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10511')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation"
                  priority="220"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10523']">
            <schxslt:rule pattern="d13e10523">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10523">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1]
                элемент reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10523')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[not(@nullFlavor)]"
                  priority="219"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10551']">
            <schxslt:rule pattern="d13e10551">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10551">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1070', '1.2.643.5.1.13.2.1.1.473'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1070', '1.2.643.5.1.13.2.1.1.473']</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1070"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(originalText) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(originalText) = 1</xsl:attribute>
                     <svrl:text>Элемент code ОБЯЗАН содержать один [1..1] элемент
                originalText
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/code)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10551')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[@nullFlavor]"
                  priority="218"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10576']">
            <schxslt:rule pattern="d13e10576">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10576">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10576')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code/originalText"
                  priority="217"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10588']">
            <schxslt:rule pattern="d13e10588">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code/originalText" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code/originalText</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10588">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/code/originalText</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/code/originalText
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент originalText должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10588')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/text"
                  priority="216"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10600']">
            <schxslt:rule pattern="d13e10600">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10600">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10600')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime"
                  priority="215"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10613']">
            <schxslt:rule pattern="d13e10613">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10613">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(low) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(low) = 1</xsl:attribute>
                     <svrl:text>Элемент effectiveTime ОБЯЗАН содержать один [1..1] элемент
                low
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/effectiveTime) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(high) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(high) = 1</xsl:attribute>
                     <svrl:text>Элемент effectiveTime ДОЛЖЕН содержать один [1..1]
                элемент high
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/effectiveTime)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10613')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/low"
                  priority="214"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10628']">
            <schxslt:rule pattern="d13e10628">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/low" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/low</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10628">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/low</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/effectiveTime/low
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент low обязан содержать один атрибут @value с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10628')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[not(@nullFlavor)]"
                  priority="213"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10640']">
            <schxslt:rule pattern="d13e10640">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10640">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент high должен содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10640')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[@nullFlavor]"
                  priority="212"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10649']">
            <schxslt:rule pattern="d13e10649">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10649">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/effectiveTime/high[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10649')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference"
                  priority="211"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10658']">
            <schxslt:rule pattern="d13e10658">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10658">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/reference
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/reference)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10658')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument"
                  priority="210"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10673']">
            <schxslt:rule pattern="d13e10673">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10673">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SUR']/section/entry/observation/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10673')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="209"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10695']">
            <schxslt:rule pattern="d13e10695">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10695">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10695')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]"
                  priority="208"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10710']">
            <schxslt:rule pattern="d13e10710">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10710">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10710')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="207"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10722']">
            <schxslt:rule pattern="d13e10722">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10722">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10722')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]"
                  priority="206"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10734']">
            <schxslt:rule pattern="d13e10734">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10734">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SUR']/section/entry/observation/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10734')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']"
                  priority="205"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10743']">
            <schxslt:rule pattern="d13e10743">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10743">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10743')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section"
                  priority="204"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10755']">
            <schxslt:rule pattern="d13e10755">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10755">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']) &gt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']) &gt;= 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать не менее одного [1..*] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10755')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/code"
                  priority="203"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10777']">
            <schxslt:rule pattern="d13e10777">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10777">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'VITALPARAM')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'VITALPARAM'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "VITALPARAM"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10777')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/title"
                  priority="202"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10802']">
            <schxslt:rule pattern="d13e10802">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10802">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10802')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/text"
                  priority="201"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10814']">
            <schxslt:rule pattern="d13e10814">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10814">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10814')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']"
                  priority="200"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10826']">
            <schxslt:rule pattern="d13e10826">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10826">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент organizer
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10826')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']"
                  priority="199"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10838']">
            <schxslt:rule pattern="d13e10838">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10838">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'CLUSTER')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'CLUSTER'</xsl:attribute>
                     <svrl:text>Элемент organizer обязан содержать один атрибут
                @classCode со значением "CLUSTER"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент organizer обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(statusCode) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(statusCode) = 1</xsl:attribute>
                     <svrl:text>Элемент organizer ОБЯЗАН содержать один [1..1]
                элемент statusCode
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент organizer ОБЯЗАН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(precondition) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(precondition) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент organizer МОЖЕТ содержать не более
                одного [0..1] элемента precondition
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']) = [1, 2])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']) = [1, 2]</xsl:attribute>
                     <svrl:text>Элемент organizer ОБЯЗАН содержать от одного до двух [1..2] элементов component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10838')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/statusCode"
                  priority="198"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10866']">
            <schxslt:rule pattern="d13e10866">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/statusCode" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/statusCode</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10866">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/statusCode</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/statusCode
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'completed')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'completed'</xsl:attribute>
                     <svrl:text>Элемент statusCode обязан содержать один атрибут
                @code со значением "completed"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10866')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/effectiveTime"
                  priority="197"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10879']">
            <schxslt:rule pattern="d13e10879">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10879">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10879')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition"
                  priority="196"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10891']">
            <schxslt:rule pattern="d13e10891">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10891">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'PRCN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'PRCN'</xsl:attribute>
                     <svrl:text>Элемент precondition обязан содержать один атрибут
                @typeCode со значением "PRCN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(criterion) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(criterion) = 1</xsl:attribute>
                     <svrl:text>Элемент precondition ОБЯЗАН содержать один [1..1]
                элемент criterion
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10891')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion"
                  priority="195"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10906']">
            <schxslt:rule pattern="d13e10906">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10906">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition/criterion
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент criterion ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition/criterion) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент criterion ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition/criterion)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10906')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/code"
                  priority="194"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10921']">
            <schxslt:rule pattern="d13e10921">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10921">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition/criterion/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'ASSERTION')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'ASSERTION'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "ASSERTION"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '2.16.840.1.113883.5.4')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '2.16.840.1.113883.5.4'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один
                атрибут @codeSystem со значением "2.16.840.1.113883.5.4"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10921')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/value"
                  priority="193"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10936']">
            <schxslt:rule pattern="d13e10936">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10936">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/precondition/criterion/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/precondition/criterion/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10936')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']"
                  priority="192"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10951']">
            <schxslt:rule pattern="d13e10951">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10951">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент component обязан содержать один атрибут
                @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1]
                элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10951')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation"
                  priority="191"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e10967']">
            <schxslt:rule pattern="d13e10967">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e10967">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6034']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6034']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '8034']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '8034']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(referenceRange) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(referenceRange) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не
                более одного [0..1] элемента referenceRange
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e10967')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][not(@nullFlavor)]"
                  priority="190"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11001']">
            <schxslt:rule pattern="d13e11001">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11001">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.52</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.52$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.52$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.52</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11001')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][@nullFlavor]"
                  priority="189"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11016']">
            <schxslt:rule pattern="d13e11016">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11016">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11016')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/code"
                  priority="188"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11028']">
            <schxslt:rule pattern="d13e11028">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11028">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.262', '1.2.643.5.1.13.13.11.1010'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.262', '1.2.643.5.1.13.13.11.1010']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.262"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11028')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value"
                  priority="187"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11053']">
            <schxslt:rule pattern="d13e11053">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11053">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент value МОЖЕТ содержать не более одного
                [0..1] элемента translation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/value)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11053')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value/translation"
                  priority="186"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11068']">
            <schxslt:rule pattern="d13e11068">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11068">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/value/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/value/translation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031']</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1358"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @code с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11068')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']"
                  priority="185"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11097']">
            <schxslt:rule pattern="d13e11097">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11097">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='6034']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='6034'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11097')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation"
                  priority="184"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11112']">
            <schxslt:rule pattern="d13e11112">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11112">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='6034']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='6034']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='6034']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11112')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/code"
                  priority="183"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11133']">
            <schxslt:rule pattern="d13e11133">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11133">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='6034']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6034')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6034'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6034"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11133')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[not(@nullFlavor)]"
                  priority="182"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11158']">
            <schxslt:rule pattern="d13e11158">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11158">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.778')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.778'</xsl:attribute>
                     <svrl:text>Элемент value должен содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.99.2.778"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11158')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[@nullFlavor]"
                  priority="181"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11183']">
            <schxslt:rule pattern="d13e11183">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11183">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '6034']/observation/value[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11183')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']"
                  priority="180"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11198']">
            <schxslt:rule pattern="d13e11198">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11198">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11198')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation"
                  priority="179"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11214']">
            <schxslt:rule pattern="d13e11214">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11214">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11214')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/code"
                  priority="178"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11235']">
            <schxslt:rule pattern="d13e11235">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11235">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8034')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8034'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8034"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11235')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/value"
                  priority="177"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11260']">
            <schxslt:rule pattern="d13e11260">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11260">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code = '8034']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/entryRelationship[observation/code/@code='8034']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'INT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'INT'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type
                со значением "INT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11260')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange"
                  priority="176"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11275']">
            <schxslt:rule pattern="d13e11275">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11275">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observationRange) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observationRange) = 1</xsl:attribute>
                     <svrl:text>Элемент referenceRange ОБЯЗАН содержать один
                [1..1] элемент observationRange
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11275')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange"
                  priority="175"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11287']">
            <schxslt:rule pattern="d13e11287">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11287">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент observationRange ОБЯЗАН содержать один [1..1]
                элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observationRange ОБЯЗАН содержать один [1..1]
                элемент value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11287')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/text"
                  priority="174"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11302']">
            <schxslt:rule pattern="d13e11302">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11302">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11302')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value"
                  priority="173"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11315']">
            <schxslt:rule pattern="d13e11315">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11315">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'IVL_PQ')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'IVL_PQ'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @xsi:type со значением "IVL_PQ"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(low) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(low) = 1</xsl:attribute>
                     <svrl:text>Элемент value ДОЛЖЕН содержать один [1..1] элемент low
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(high) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(high) = 1</xsl:attribute>
                     <svrl:text>Элемент value ДОЛЖЕН содержать один [1..1] элемент high
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11315')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[not(@nullFlavor)]"
                  priority="172"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11333']">
            <schxslt:rule pattern="d13e11333">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11333">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент low должен содержать один атрибут @value с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@unit != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit != ''</xsl:attribute>
                     <svrl:text>Элемент low должен содержать один атрибут @unit с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) = 1</xsl:attribute>
                     <svrl:text>Элемент low ОБЯЗАН содержать один [1..1] элемент
                translation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11333')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[@nullFlavor]"
                  priority="171"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11348']">
            <schxslt:rule pattern="d13e11348">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11348">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@unit">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @unit</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11348')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low/translation"
                  priority="170"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11360']">
            <schxslt:rule pattern="d13e11360">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11360">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/low/translation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031']</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1358"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @code с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11360')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[not(@nullFlavor)]"
                  priority="169"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11388']">
            <schxslt:rule pattern="d13e11388">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11388">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент high должен содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@unit != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit != ''</xsl:attribute>
                     <svrl:text>Элемент high должен содержать один атрибут @unit с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) = 1</xsl:attribute>
                     <svrl:text>Элемент high ОБЯЗАН содержать один [1..1] элемент
                translation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11388')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[@nullFlavor]"
                  priority="168"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11403']">
            <schxslt:rule pattern="d13e11403">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11403">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@unit">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @unit</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11403')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high/translation"
                  priority="167"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11416']">
            <schxslt:rule pattern="d13e11416">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11416">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem = '1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='VITALPARAM']/section/entry[organizer/component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/organizer[component/observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/component[observation/code/@codeSystem='1.2.643.5.1.13.13.99.2.262']/observation/referenceRange/observationRange/value/high/translation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031']</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1358"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @code с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11416')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']"
                  priority="166"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11444']">
            <schxslt:rule pattern="d13e11444">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11444">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11444')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section"
                  priority="165"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11456']">
            <schxslt:rule pattern="d13e11456">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11456">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']) &gt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']) &gt;= 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать не менее одного [1..*] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11456')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/code"
                  priority="164"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11477']">
            <schxslt:rule pattern="d13e11477">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11477">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'SCORES')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'SCORES'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "SCORES"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11477')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/title"
                  priority="163"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11502']">
            <schxslt:rule pattern="d13e11502">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11502">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11502')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/text"
                  priority="162"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11514']">
            <schxslt:rule pattern="d13e11514">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11514">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11514')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']"
                  priority="161"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11527']">
            <schxslt:rule pattern="d13e11527">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11527">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11527')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation"
                  priority="160"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11539']">
            <schxslt:rule pattern="d13e11539">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11539">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не
                более одного [0..1] элемента effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(performer) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(performer) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более
                одного [0..1] элемента performer
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '8020']) &gt;= 0)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '8020']) &gt;= 0</xsl:attribute>
                     <svrl:text>Элемент
                observation МОЖЕТ содержать произвольное количество [0..*] элементов
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '8019']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '8019']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента
                entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11539')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/code"
                  priority="159"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11573']">
            <schxslt:rule pattern="d13e11573">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11573">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.11.1514')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.11.1514'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать
                один атрибут @codeSystem со значением "1.2.643.5.1.13.13.11.1514"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11573')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/effectiveTime"
                  priority="158"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11598']">
            <schxslt:rule pattern="d13e11598">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11598">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11598')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value"
                  priority="157"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11610']">
            <schxslt:rule pattern="d13e11610">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11610">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'PQ')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'PQ'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "PQ"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@unit != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @unit с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) = 1</xsl:attribute>
                     <svrl:text>Элемент value ОБЯЗАН содержать один [1..1] элемент
                translation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/value)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11610')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value/translation"
                  priority="156"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11631']">
            <schxslt:rule pattern="d13e11631">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value/translation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value/translation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11631">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/value/translation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/value/translation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1358', '1.2.643.5.1.13.13.11.1031']</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1358"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут @code с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один
                атрибут @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент translation обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11631')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer"
                  priority="155"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11660']">
            <schxslt:rule pattern="d13e11660">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11660">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(assignedEntity) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedEntity) = 1</xsl:attribute>
                     <svrl:text>Элемент performer ОБЯЗАН содержать один [1..1]
                элемент assignedEntity
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11660')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity"
                  priority="154"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11672']">
            <schxslt:rule pattern="d13e11672">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11672">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один [1..1]
                элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(telecom) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(telecom) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент assignedEntity МОЖЕТ содержать не более
                одного [0..1] элемента telecom
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(assignedPerson) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(assignedPerson) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedEntity ОБЯЗАН содержать один
                [1..1] элемент assignedPerson
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11672')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]"
                  priority="153"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11693']">
            <schxslt:rule pattern="d13e11693">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11693">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.70$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.70</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11693')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][@nullFlavor]"
                  priority="152"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11708']">
            <schxslt:rule pattern="d13e11708">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11708">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11708')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/code"
                  priority="151"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11720']">
            <schxslt:rule pattern="d13e11720">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11720">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1002', '1.2.643.5.1.13.2.1.1.733']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11720')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/telecom"
                  priority="150"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11745']">
            <schxslt:rule pattern="d13e11745">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/telecom" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11745">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/telecom</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/telecom
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(@use != '') = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(@use != '') = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут
                @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(                     if (@use) then                         @use != ''                     else                         (not(@use)))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">                     if (@use) then                         @use != ''                     else                         (not(@use))</xsl:attribute>
                     <svrl:text>Элемент telecom должен содержать один атрибут @use с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент telecom обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11745')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson"
                  priority="149"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11764']">
            <schxslt:rule pattern="d13e11764">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11764">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(name) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(name) = 1</xsl:attribute>
                     <svrl:text>Элемент assignedPerson ОБЯЗАН содержать один [1..1]
                элемент name
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11764')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name"
                  priority="148"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11776']">
            <schxslt:rule pattern="d13e11776">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11776">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(family) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(family) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент
                family
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(given) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(given) = 1</xsl:attribute>
                     <svrl:text>Элемент name ОБЯЗАН содержать один [1..1] элемент given
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(identity:Patronymic) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(identity:Patronymic) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент name МОЖЕТ содержать не более
                одного [0..1] элемента identity:Patronymic
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11776')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/family"
                  priority="147"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11794']">
            <schxslt:rule pattern="d13e11794">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/family" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11794">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/family</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/family
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент family должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11794')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/given"
                  priority="146"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11806']">
            <schxslt:rule pattern="d13e11806">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/given" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11806">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/given</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/given
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент given должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11806')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic"
                  priority="145"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11818']">
            <schxslt:rule pattern="d13e11818">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11818">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/performer/assignedEntity/assignedPerson/name/identity:Patronymic
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент identity:Patronymic должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11818')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']"
                  priority="144"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11830']">
            <schxslt:rule pattern="d13e11830">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11830">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11830')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation"
                  priority="143"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11846']">
            <schxslt:rule pattern="d13e11846">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11846">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[substring(@root, string-length(@root) - 2) = '.52']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[substring(@root, string-length(@root) - 2) = '.52']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного [0..1] элемента id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ДОЛЖЕН содержать один [1..1]
                элемент effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11846')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/id[substring(@root, string-length(@root) - 2) = '.52']"
                  priority="142"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11874']">
            <schxslt:rule pattern="d13e11874">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/id[substring(@root, string-length(@root) - 2) = '.52']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/id[substring(@root, string-length(@root) - 2) = '.52']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11874">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/id[substring(@root, string-length(@root) - 2) = '.52']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation/id[substring(@root,
                string-length(@root) - 2)='.52'] не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.52</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.52$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.52$')</xsl:attribute>
                     <svrl:text>Элемент id обязан
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.52</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id обязан содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11874')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/code"
                  priority="141"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11892']">
            <schxslt:rule pattern="d13e11892">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11892">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8020')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8020'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8020"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11892')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[not(@nullFlavor)]"
                  priority="140"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11917']">
            <schxslt:rule pattern="d13e11917">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11917">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime должен содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11917')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[@nullFlavor]"
                  priority="139"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11926']">
            <schxslt:rule pattern="d13e11926">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11926">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/effectiveTime[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@value">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @value</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11926')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/value"
                  priority="138"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11935']">
            <schxslt:rule pattern="d13e11935">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11935">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8020']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8020']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11935')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']"
                  priority="137"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11964']">
            <schxslt:rule pattern="d13e11964">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11964">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11964')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation"
                  priority="136"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e11979']">
            <schxslt:rule pattern="d13e11979">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e11979">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент observation МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e11979')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/code"
                  priority="135"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12004']">
            <schxslt:rule pattern="d13e12004">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12004">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8019')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8019'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8019"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12004')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/text"
                  priority="134"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12029']">
            <schxslt:rule pattern="d13e12029">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12029">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12029')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/value"
                  priority="133"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12041']">
            <schxslt:rule pattern="d13e12041">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12041">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SCORES']/section/entry[observation/code/@codeSystem = '1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code = '8019']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SCORES']/section/entry[observation/code/@codeSystem='1.2.643.5.1.13.13.11.1514']/observation/entryRelationship[observation/code/@code='8019']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @codeSystem
                с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12041')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']"
                  priority="132"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12069']">
            <schxslt:rule pattern="d13e12069">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12069">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12069')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section"
                  priority="131"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12082']">
            <schxslt:rule pattern="d13e12082">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12082">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12082')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/code"
                  priority="130"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12100']">
            <schxslt:rule pattern="d13e12100">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12100">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'DRUG')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'DRUG'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "DRUG"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12100')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/title"
                  priority="129"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12125']">
            <schxslt:rule pattern="d13e12125">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12125">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12125')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/text"
                  priority="128"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12137']">
            <schxslt:rule pattern="d13e12137">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12137">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'DRUG']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='DRUG']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12137')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']"
                  priority="127"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12149']">
            <schxslt:rule pattern="d13e12149">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12149">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12149')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section"
                  priority="126"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12161']">
            <schxslt:rule pattern="d13e12161">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12161">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12161')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/code"
                  priority="125"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12180']">
            <schxslt:rule pattern="d13e12180">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12180">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'ELSEPROCEDURE')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'ELSEPROCEDURE'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code
                со значением "ELSEPROCEDURE"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12180')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/title"
                  priority="124"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12205']">
            <schxslt:rule pattern="d13e12205">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12205">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12205')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/text"
                  priority="123"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12217']">
            <schxslt:rule pattern="d13e12217">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12217">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'ELSEPROCEDURE']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='ELSEPROCEDURE']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12217')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']"
                  priority="122"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12229']">
            <schxslt:rule pattern="d13e12229">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12229">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12229')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section"
                  priority="121"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12241']">
            <schxslt:rule pattern="d13e12241">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12241">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12241')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/code"
                  priority="120"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12259']">
            <schxslt:rule pattern="d13e12259">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12259">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'POLT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'POLT'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "POLT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12259')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/title"
                  priority="119"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12285']">
            <schxslt:rule pattern="d13e12285">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12285">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12285')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/text"
                  priority="118"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12297']">
            <schxslt:rule pattern="d13e12297">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12297">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'POLT']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='POLT']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12297')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']"
                  priority="117"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12309']">
            <schxslt:rule pattern="d13e12309">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12309">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12309')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section"
                  priority="116"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12321']">
            <schxslt:rule pattern="d13e12321">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12321">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12321')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/code"
                  priority="115"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12339']">
            <schxslt:rule pattern="d13e12339">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12339">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RADIOTHERAPY')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RADIOTHERAPY'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code
                со значением "RADIOTHERAPY"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12339')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/title"
                  priority="114"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12364']">
            <schxslt:rule pattern="d13e12364">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12364">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12364')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/text"
                  priority="113"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12377']">
            <schxslt:rule pattern="d13e12377">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12377">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RADIOTHERAPY']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RADIOTHERAPY']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12377')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']"
                  priority="112"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12389']">
            <schxslt:rule pattern="d13e12389">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12389">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12389')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section"
                  priority="111"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12401']">
            <schxslt:rule pattern="d13e12401">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12401">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12401')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/code"
                  priority="110"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12419']">
            <schxslt:rule pattern="d13e12419">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12419">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'SPECIALTREAT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'SPECIALTREAT'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code
                со значением "SPECIALTREAT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12419')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/title"
                  priority="109"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12444']">
            <schxslt:rule pattern="d13e12444">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12444">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12444')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/text"
                  priority="108"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12456']">
            <schxslt:rule pattern="d13e12456">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12456">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SPECIALTREAT']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SPECIALTREAT']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12456')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']"
                  priority="107"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12469']">
            <schxslt:rule pattern="d13e12469">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12469">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12469')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section"
                  priority="106"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12481']">
            <schxslt:rule pattern="d13e12481">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12481">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'TRTMPLAN']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'TRTMPLAN']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент
                section МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(component[section/code/@code = 'OBSPLAN']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(component[section/code/@code = 'OBSPLAN']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента component
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12481')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/code"
                  priority="105"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12506']">
            <schxslt:rule pattern="d13e12506">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12506">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'PLANACTIVE')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'PLANACTIVE'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "PLANACTIVE"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12506')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/title"
                  priority="104"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12531']">
            <schxslt:rule pattern="d13e12531">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12531">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12531')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/text"
                  priority="103"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12543']">
            <schxslt:rule pattern="d13e12543">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12543">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12543')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']"
                  priority="102"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12555']">
            <schxslt:rule pattern="d13e12555">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12555">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12555')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section"
                  priority="101"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12568']">
            <schxslt:rule pattern="d13e12568">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12568">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12568')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/code"
                  priority="100"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12586']">
            <schxslt:rule pattern="d13e12586">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12586">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'TRTMPLAN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'TRTMPLAN'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "TRTMPLAN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12586')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/title"
                  priority="99"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12611']">
            <schxslt:rule pattern="d13e12611">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12611">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12611')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/text"
                  priority="98"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12623']">
            <schxslt:rule pattern="d13e12623">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12623">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'TRTMPLAN']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='TRTMPLAN']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12623')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']"
                  priority="97"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12635']">
            <schxslt:rule pattern="d13e12635">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12635">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12635')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section"
                  priority="96"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12647']">
            <schxslt:rule pattern="d13e12647">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12647">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12647')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/code"
                  priority="95"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12666']">
            <schxslt:rule pattern="d13e12666">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12666">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'OBSPLAN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'OBSPLAN'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "OBSPLAN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12666')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/title"
                  priority="94"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12691']">
            <schxslt:rule pattern="d13e12691">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12691">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12691')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/text"
                  priority="93"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12703']">
            <schxslt:rule pattern="d13e12703">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12703">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'PLANACTIVE']/section/component[section/code/@code = 'OBSPLAN']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='PLANACTIVE']/section/component[section/code/@code='OBSPLAN']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12703')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']"
                  priority="92"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12715']">
            <schxslt:rule pattern="d13e12715">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12715">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12715')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section"
                  priority="91"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12727']">
            <schxslt:rule pattern="d13e12727">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12727">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '8058']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '8058']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section
                МОЖЕТ содержать не более одного [0..1] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12727')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/code"
                  priority="90"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12748']">
            <schxslt:rule pattern="d13e12748">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12748">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'RESINFO')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'RESINFO'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "RESINFO"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12748')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/title"
                  priority="89"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12774']">
            <schxslt:rule pattern="d13e12774">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12774">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12774')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/text"
                  priority="88"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12786']">
            <schxslt:rule pattern="d13e12786">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12786">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12786')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']"
                  priority="87"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12798']">
            <schxslt:rule pattern="d13e12798">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12798">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12798')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation"
                  priority="86"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12810']">
            <schxslt:rule pattern="d13e12810">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12810">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12810')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/code"
                  priority="85"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12831']">
            <schxslt:rule pattern="d13e12831">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12831">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '8058')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '8058'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "8058"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12831')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/value"
                  priority="84"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12856']">
            <schxslt:rule pattern="d13e12856">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12856">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'RESINFO']/section/entry[observation/code/@code = '8058']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='RESINFO']/section/entry[observation/code/@code='8058']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12856')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']"
                  priority="83"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12872']">
            <schxslt:rule pattern="d13e12872">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12872">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12872')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section"
                  priority="82"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12884']">
            <schxslt:rule pattern="d13e12884">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12884">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12884')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/code"
                  priority="81"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12902']">
            <schxslt:rule pattern="d13e12902">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12902">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'REGIME')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'REGIME'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "REGIME"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12902')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/title"
                  priority="80"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12927']">
            <schxslt:rule pattern="d13e12927">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12927">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12927')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/text"
                  priority="79"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12939']">
            <schxslt:rule pattern="d13e12939">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12939">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'REGIME']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='REGIME']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12939')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']"
                  priority="78"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12951']">
            <schxslt:rule pattern="d13e12951">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12951">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12951')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section"
                  priority="77"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12964']">
            <schxslt:rule pattern="d13e12964">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12964">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент section МОЖЕТ содержать не более одного
                [0..1] элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[observation/code/@code = '6035']) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[observation/code/@code = '6035']) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН
                содержать один [1..1] элемент entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12964')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/code"
                  priority="76"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e12985']">
            <schxslt:rule pattern="d13e12985">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e12985">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'SERVICES')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'SERVICES'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "SERVICES"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e12985')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/title"
                  priority="75"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13010']">
            <schxslt:rule pattern="d13e13010">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13010">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13010')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/text"
                  priority="74"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13022']">
            <schxslt:rule pattern="d13e13022">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13022">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13022')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']"
                  priority="73"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13034']">
            <schxslt:rule pattern="d13e13034">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13034">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент
                observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13034')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation"
                  priority="72"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13046']">
            <schxslt:rule pattern="d13e13046">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13046">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship) &gt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship) &gt;= 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать не
                менее одного [1..*] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13046')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/code"
                  priority="71"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13072']">
            <schxslt:rule pattern="d13e13072">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13072">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6035')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6035'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6035"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13072')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/value"
                  priority="70"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13097']">
            <schxslt:rule pattern="d13e13097">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13097">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'INT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'INT'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type
                со значением "INT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @value с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13097')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship"
                  priority="69"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13112']">
            <schxslt:rule pattern="d13e13112">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13112">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(act) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(act) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один [1..1]
                элемент act
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13112')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act"
                  priority="68"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13127']">
            <schxslt:rule pattern="d13e13127">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13127">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship/act
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'ACT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'ACT'</xsl:attribute>
                     <svrl:text>Элемент act обязан содержать один атрибут @classCode
                со значением "ACT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент act обязан содержать один атрибут @moodCode со
                значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент act ДОЛЖЕН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship/act) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент act МОЖЕТ содержать не более одного [0..1]
                элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship/act) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент act ОБЯЗАН содержать один [1..1] элемент
                effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship/act)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13127')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[not(@nullFlavor)]"
                  priority="67"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13152']">
            <schxslt:rule pattern="d13e13152">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13152">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.11.1070', '1.2.643.5.1.13.2.1.1.473'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.11.1070', '1.2.643.5.1.13.2.1.1.473']</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.11.1070"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code должен содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13152')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[@nullFlavor]"
                  priority="66"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13173']">
            <schxslt:rule pattern="d13e13173">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13173">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/code[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@code">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @code</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@displayName">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @displayName</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13173')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/text"
                  priority="65"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13186']">
            <schxslt:rule pattern="d13e13186">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13186">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship/act/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13186')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/effectiveTime"
                  priority="64"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13198']">
            <schxslt:rule pattern="d13e13198">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13198">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'SERVICES']/section/entry[observation/code/@code = '6035']/observation/entryRelationship/act/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='SERVICES']/section/entry[observation/code/@code='6035']/observation/entryRelationship/act/effectiveTime
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13198')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']"
                  priority="63"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13210']">
            <schxslt:rule pattern="d13e13210">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13210">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(section) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(section) = 1</xsl:attribute>
                     <svrl:text>Элемент component ОБЯЗАН содержать один [1..1] элемент
                section
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13210')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section"
                  priority="62"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13222']">
            <schxslt:rule pattern="d13e13222">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13222">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(title) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(title) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент
                title
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать один [1..1] элемент text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]) &gt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]) &gt;= 1</xsl:attribute>
                     <svrl:text>Элемент section ОБЯЗАН содержать не менее одного [1..*] элемента entry
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13222')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/code"
                  priority="61"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13243']">
            <schxslt:rule pattern="d13e13243">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13243">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = 'LINKDOCS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = 'LINKDOCS'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "LINKDOCS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.197', '1.2.643.5.1.13.2.1.1.1504.23', '1.2.643.5.1.13.13.11.1379']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.197"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13243')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/title"
                  priority="60"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13268']">
            <schxslt:rule pattern="d13e13268">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/title" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/title</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13268">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/title</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/title
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент title должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13268')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/text"
                  priority="59"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13281']">
            <schxslt:rule pattern="d13e13281">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13281">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/text
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13281')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]"
                  priority="58"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13293']">
            <schxslt:rule pattern="d13e13293">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13293">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']] не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(count(act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]) = 1</xsl:attribute>
                     <svrl:text>Элемент entry ОБЯЗАН содержать один [1..1] элемент act
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13293')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]"
                  priority="57"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13305']">
            <schxslt:rule pattern="d13e13305">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13305">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']] не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'ACT')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'ACT'</xsl:attribute>
                     <svrl:text>Элемент act обязан содержать один атрибут @classCode
                со значением "ACT"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент act обязан содержать один атрибут @moodCode со
                значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент act ОБЯЗАН содержать один [1..1] элемент code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(text) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(text) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент act МОЖЕТ содержать не более одного [0..1]
                элемента text
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(effectiveTime) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(effectiveTime) = 1</xsl:attribute>
                     <svrl:text>Элемент act ОБЯЗАН содержать один [1..1] элемент
                effectiveTime
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '11002']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '11002']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент act МОЖЕТ содержать не более одного [0..1] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '11003']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '11003']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент act МОЖЕТ содержать не более одного [0..1] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(entryRelationship[observation/code/@code = '6058']) = [0, 1])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(entryRelationship[observation/code/@code = '6058']) = [0, 1]</xsl:attribute>
                     <svrl:text>Элемент act МОЖЕТ содержать не более одного [0..1] элемента entryRelationship
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(reference) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(reference) = 1</xsl:attribute>
                     <svrl:text>Элемент act ОБЯЗАН содержать один [1..1] элемент
                reference
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13305')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/code"
                  priority="56"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13342']">
            <schxslt:rule pattern="d13e13342">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13342">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/code не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem
                с не пустым значением; допустимые значения: "1.2.643.5.1.13.13.99.2.1079",
                "1.2.643.5.1.13.13.11.1522"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem с не пустым значением;
                допустимые значения: "1.2.643.5.1.13.13.99.2.1079",
                "1.2.643.5.1.13.13.11.1522"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13342')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/text"
                  priority="55"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13370']">
            <schxslt:rule pattern="d13e13370">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/text" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/text</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13370">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/text</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/text не должен иметь
                атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент text должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13370')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/effectiveTime"
                  priority="54"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13382']">
            <schxslt:rule pattern="d13e13382">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/effectiveTime" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/effectiveTime</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13382">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/effectiveTime</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/effectiveTime не
                должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент effectiveTime обязан содержать один атрибут @value с
                не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13382')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']"
                  priority="53"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13395']">
            <schxslt:rule pattern="d13e13395">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13395">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13395')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation"
                  priority="52"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13410']">
            <schxslt:rule pattern="d13e13410">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13410">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13410')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/code"
                  priority="51"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13431']">
            <schxslt:rule pattern="d13e13431">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13431">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '11002')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '11002'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "11002"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13431')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/value"
                  priority="50"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13456']">
            <schxslt:rule pattern="d13e13456">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13456">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11002']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11002']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13456')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']"
                  priority="49"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13471']">
            <schxslt:rule pattern="d13e13471">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13471">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13471')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation"
                  priority="48"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13486']">
            <schxslt:rule pattern="d13e13486">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13486">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13486')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/code"
                  priority="47"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13508']">
            <schxslt:rule pattern="d13e13508">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13508">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '11003')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '11003'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "11003"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13508')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/value"
                  priority="46"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13533']">
            <schxslt:rule pattern="d13e13533">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13533">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '11003']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='11003']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'ST')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'ST'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "ST"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент value должен содержать не пустое текстовое
                наполнение</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13533')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']"
                  priority="45"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13548']">
            <schxslt:rule pattern="d13e13548">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13548">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058']
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'COMP')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'COMP'</xsl:attribute>
                     <svrl:text>Элемент entryRelationship обязан содержать один
                атрибут @typeCode со значением "COMP"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(observation) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(observation) = 1</xsl:attribute>
                     <svrl:text>Элемент entryRelationship ОБЯЗАН содержать один
                [1..1] элемент observation
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058'])
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13548')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation"
                  priority="44"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13563']">
            <schxslt:rule pattern="d13e13563">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13563">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058']/observation
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'OBS')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'OBS'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @classCode со значением "OBS"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент observation обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(code) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(code) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                code
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058']/observation) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(value) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(value) = 1</xsl:attribute>
                     <svrl:text>Элемент observation ОБЯЗАН содержать один [1..1] элемент
                value
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058']/observation)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13563')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/code"
                  priority="43"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13584']">
            <schxslt:rule pattern="d13e13584">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/code" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/code</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13584">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/code</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058']/observation/code
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@code = '6058')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code = '6058'</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @code со
                значением "6058"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = ['1.2.643.5.1.13.13.99.2.166', '1.2.643.5.1.13.2.1.1.1504.41', '1.2.643.5.1.13.13.11.1380']</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.166"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент code обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13584')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/value"
                  priority="42"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13609']">
            <schxslt:rule pattern="d13e13609">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/value" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/value</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13609">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code = '6058']/observation/value</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/entryRelationship[observation/code/@code='6058']/observation/value
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@xsi:type = 'CD')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@xsi:type = 'CD'</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @xsi:type со
                значением "CD"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystem = '1.2.643.5.1.13.13.99.2.1008')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem = '1.2.643.5.1.13.13.99.2.1008'</xsl:attribute>
                     <svrl:text>Элемент value обязан
                содержать один атрибут @codeSystem со значением
                "1.2.643.5.1.13.13.99.2.1008"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут @code с не пустым
                значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @codeSystemVersion с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент value обязан содержать один атрибут
                @displayName с не пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13609')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference"
                  priority="41"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13638']">
            <schxslt:rule pattern="d13e13638">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13638">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/reference не должен
                иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@typeCode = 'REFR')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@typeCode = 'REFR'</xsl:attribute>
                     <svrl:text>Элемент reference обязан содержать один атрибут
                @typeCode со значением "REFR"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(externalDocument) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(externalDocument) = 1</xsl:attribute>
                     <svrl:text>Элемент reference ОБЯЗАН содержать один
                [1..1] элемент externalDocument
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/reference) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13638')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument"
                  priority="40"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13653']">
            <schxslt:rule pattern="d13e13653">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13653">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor</xsl:attribute>
                     <svrl:text>Элемент
                ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/reference/externalDocument
                не должен иметь атрибут @nullFlavor</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="not(@classCode = 'DOCCLIN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@classCode = 'DOCCLIN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один
                атрибут @classCode со значением "DOCCLIN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@moodCode = 'EVN')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@moodCode = 'EVN'</xsl:attribute>
                     <svrl:text>Элемент externalDocument обязан содержать один атрибут
                @moodCode со значением "EVN"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[1]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[1]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/reference/externalDocument) </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(id[2]) = 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(id[2]) = 1</xsl:attribute>
                     <svrl:text>Элемент externalDocument ДОЛЖЕН содержать один [1..1]
                элемент id
                (ClinicalDocument/component/structuredBody/component[section/code/@code='HOSP']/section/component[section/code/@code='LINKDOCS']/section/entry[act/code/@codeSystem
                in ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem
                in
                ['1.2.643.5.1.13.13.99.2.1079','1.2.643.5.1.13.13.11.1522']]/reference/externalDocument)
            </svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13653')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][not(@nullFlavor)]"
                  priority="39"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13674']">
            <schxslt:rule pattern="d13e13674">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13674">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @root с не пустым
                значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+\.51$')</xsl:attribute>
                     <svrl:text>Элемент id должен
                содержать один атрибут @root с не пустым значением; допустимый формат значения:
                OID_медицинской_организации.100.НомерМИС.НомерЭкзМИС.51</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13674')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][@nullFlavor]"
                  priority="38"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13689']">
            <schxslt:rule pattern="d13e13689">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13689">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[1][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с атрибутом
                @root</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13689')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][not(@nullFlavor)]"
                  priority="37"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13701']">
            <schxslt:rule pattern="d13e13701">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13701">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@root = '1.2.643.5.1.13.13.17.1.1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@root = '1.2.643.5.1.13.13.17.1.1'</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один
                атрибут @root со значением "1.2.643.5.1.13.13.17.1.1"</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@extension != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension != ''</xsl:attribute>
                     <svrl:text>Элемент id должен содержать один атрибут @extension с не
                пустым значением</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13701')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][@nullFlavor]"
                  priority="36"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13713']">
            <schxslt:rule pattern="d13e13713">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13713">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/component/structuredBody/component[section/code/@code = 'HOSP']/section/component[section/code/@code = 'LINKDOCS']/section/entry[act/code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/act[code/@codeSystem = ['1.2.643.5.1.13.13.99.2.1079', '1.2.643.5.1.13.13.11.1522']]/reference/externalDocument/id[2][@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="@extension">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@extension</xsl:attribute>
                     <svrl:text>Атрибут nullFlavor не должен быть представлен совместно с
                атрибутом @extension</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13713')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//id[not(@nullFlavor)]" priority="35" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13723']">
            <schxslt:rule pattern="d13e13723">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//id[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//id[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13723">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//id[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@root, '^[0-2](\.([1-9][0-9]*|0))+$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@root, '^[0-2](\.([1-9][0-9]*|0))+$')</xsl:attribute>
                     <svrl:text>Элемент //id должен иметь
                синтаксически корректное значение атрибута @root, соответствующее регулярному
                выражению '([0-2])([.]([1-9][0-9]*|0))+'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13723')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//id[@root = '1.2.643.100.3'][not(@nullFlavor)]"
                  priority="34"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13732']">
            <schxslt:rule pattern="d13e13732">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//id[@root = '1.2.643.100.3'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//id[@root = '1.2.643.100.3'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13732">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//id[@root = '1.2.643.100.3'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@extension, '^([0-9]{3}[-\s]{0,1}){3}[0-9]{2}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@extension, '^([0-9]{3}[-\s]{0,1}){3}[0-9]{2}$')</xsl:attribute>
                     <svrl:text>Элемент
                //id[@root='1.2.643.100.3'] должен иметь синтаксически корректное значение атрибута
                @extension, соответствующее СНИЛС: должно состоять из 11 цифр, цифры могут
                группироваться по 3+3+3+2, между группами может ставиться пробел или тире.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13732')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//postalCode[not(@nullFlavor)]" priority="33" mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13741']">
            <schxslt:rule pattern="d13e13741">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//postalCode[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13741">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//postalCode[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(., '^[0-9]{6}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(., '^[0-9]{6}$')</xsl:attribute>
                     <svrl:text>Элемент //postalCode должен иметь синтаксически
                корректное значение, соответствующее почтовому индексу: должно состоять из 6 цифр
                без разделителей.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13741')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//id[not(@nullFlavor)][@root = '1.2.643.5.1.13.13.17.1.1']"
                  priority="32"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13750']">
            <schxslt:rule pattern="d13e13750">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//id[not(@nullFlavor)][@root = '1.2.643.5.1.13.13.17.1.1']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//id[not(@nullFlavor)][@root = '1.2.643.5.1.13.13.17.1.1']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13750">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//id[not(@nullFlavor)][@root = '1.2.643.5.1.13.13.17.1.1']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@extension, '(^[0-9]{2}[.][0-9]{2}[.][0-9]{3,4}[.][0-9]{9}$|^[0-9]{1,3}[.][0-9]{2}[.][0-9]{2}[.][0-9]{2}[.][0-9]{9}$)'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@extension, '(^[0-9]{2}[.][0-9]{2}[.][0-9]{3,4}[.][0-9]{9}$|^[0-9]{1,3}[.][0-9]{2}[.][0-9]{2}[.][0-9]{2}[.][0-9]{9}$)')</xsl:attribute>
                     <svrl:text>Элемент //id[@root='1.2.643.5.1.13.13.17.1.1'] должен иметь синтаксически
                корректное значение атрибута @extension, соответствующее регулярному выражению
                '^[0-9]{2}[.][0-9]{2}[.][0-9]{3,4}[.][0-9]{9}$' или
                '^[0-9]{1,3}[.][0-9]{2}[.][0-9]{2}[.][0-9]{2}[.][0-9]{9}$'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13750')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//effectiveTime[not(low | high | width)][not(@nullFlavor)][not(@xsi:type = ['IVL_TS', 'PIVL_TS'])]"
                  priority="31"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13759']">
            <schxslt:rule pattern="d13e13759">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//effectiveTime[not(low | high | width)][not(@nullFlavor)][not(@xsi:type = ['IVL_TS', 'PIVL_TS'])]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//effectiveTime[not(low | high | width)][not(@nullFlavor)][not(@xsi:type = ['IVL_TS', 'PIVL_TS'])]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13759">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//effectiveTime[not(low | high | width)][not(@nullFlavor)][not(@xsi:type = ['IVL_TS', 'PIVL_TS'])]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13759')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//birthTime[not(@nullFlavor)] | //time[not(@nullFlavor)] | //effectiveTime/low[not(@nullFlavor)] | //effectiveTime/high[not(@nullFlavor)] | //value[@xsi:type = 'TS'][not(@nullFlavor)]"
                  priority="30"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13768']">
            <schxslt:rule pattern="d13e13768">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//birthTime[not(@nullFlavor)] | //time[not(@nullFlavor)] | //effectiveTime/low[not(@nullFlavor)] | //effectiveTime/high[not(@nullFlavor)] | //value[@xsi:type = 'TS'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//birthTime[not(@nullFlavor)] | //time[not(@nullFlavor)] | //effectiveTime/low[not(@nullFlavor)] | //effectiveTime/high[not(@nullFlavor)] | //value[@xsi:type = 'TS'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13768">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//birthTime[not(@nullFlavor)] | //time[not(@nullFlavor)] | //effectiveTime/low[not(@nullFlavor)] | //effectiveTime/high[not(@nullFlavor)] | //value[@xsi:type = 'TS'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13768')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//identity:effectiveTime/identity:low[not(@nullFlavor)]"
                  priority="29"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13778']">
            <schxslt:rule pattern="d13e13778">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//identity:effectiveTime/identity:low[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:effectiveTime/identity:low[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13778">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:effectiveTime/identity:low[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13778')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//identity:effectiveTime/identity:high[not(@nullFlavor)]"
                  priority="28"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13787']">
            <schxslt:rule pattern="d13e13787">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//identity:effectiveTime/identity:high[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:effectiveTime/identity:high[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13787">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:effectiveTime/identity:high[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13787')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//identity:IssueDate[not(@nullFlavor)]"
                  priority="27"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13796']">
            <schxslt:rule pattern="d13e13796">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//identity:IssueDate[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:IssueDate[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13796">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:IssueDate[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13796')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//identity:IssueDate[not(@nullFlavor)]"
                  priority="26"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13805']">
            <schxslt:rule pattern="d13e13805">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//identity:IssueDate[not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:IssueDate[not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13805">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:IssueDate[not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13805')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument[id/@root][setId/@root]"
                  priority="25"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13814']">
            <schxslt:rule pattern="d13e13814">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument[id/@root][setId/@root]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument[id/@root][setId/@root]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13814">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument[id/@root][setId/@root]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="id/@root = setId/@root">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">id/@root = setId/@root</xsl:attribute>
                     <svrl:text>Значения атрибута @root элементов
                ClinicalDocument/id и ClinicalDocument/setId должны различаться.</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13814')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//identity:Props[not(@nullFlavor)][identity:Ogrn or identity:Ogrnip]"
                  priority="24"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13823']">
            <schxslt:rule pattern="d13e13823">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//identity:Props[not(@nullFlavor)][identity:Ogrn or identity:Ogrnip]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:Props[not(@nullFlavor)][identity:Ogrn or identity:Ogrnip]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13823">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//identity:Props[not(@nullFlavor)][identity:Ogrn or identity:Ogrnip]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not((identity:Ogrn and not(identity:Ogrnip)) or (identity:Ogrnip and not(identity:Ogrn)) or (identity:Ogrn and identity:Ogrnip/@nullFlavor) or (identity:Ogrn/@nullFlavor and identity:Ogrnip))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">(identity:Ogrn and not(identity:Ogrnip)) or (identity:Ogrnip and not(identity:Ogrn)) or (identity:Ogrn and identity:Ogrnip/@nullFlavor) or (identity:Ogrn/@nullFlavor and identity:Ogrnip)</xsl:attribute>
                     <svrl:text>ОГРН и ОГРНИП не могут быть указаны совместно.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13823')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'PQ'][not(@nullFlavor)]"
                  priority="23"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13833']">
            <schxslt:rule pattern="d13e13833">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'PQ'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'PQ'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13833">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'PQ'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='PQ', должен иметь не пустое
                значение атрибута @value.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@unit != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@unit != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='PQ', должен иметь не пустое
                значение атрибута @unit.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(translation) &lt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(translation) &lt;= 1</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='PQ', должен
                иметь не более 1 элемента translation.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13833')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'ST'][not(@nullFlavor)]"
                  priority="22"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13848']">
            <schxslt:rule pattern="d13e13848">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'ST'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'ST'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13848">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'ST'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(. != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">. != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='ST', должен иметь не пустое
                значение.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13848')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'BL'][not(@nullFlavor)]"
                  priority="21"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13857']">
            <schxslt:rule pattern="d13e13857">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'BL'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'BL'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13857">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'BL'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value = ['true', 'false'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value = ['true', 'false']</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='BL', должен
                иметь значение атрибута @value равное 'true' или 'false'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13857')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'CD'][not(@nullFlavor)]"
                  priority="20"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13866']">
            <schxslt:rule pattern="d13e13866">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'CD'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'CD'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13866">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'CD'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@codeSystem != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystem != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='CD', должен иметь не
                пустое значение атрибута @codeSystem.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemName != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='CD', должен иметь не
                пустое значение атрибута @codeSystemName.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@code != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@code != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='CD', должен иметь не пустое
                значение атрибута @code.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@codeSystemVersion != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@codeSystemVersion != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='CD', должен иметь
                не пустое значение атрибута @codeSystemVersion.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(@displayName != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@displayName != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='CD', должен иметь не
                пустое значение атрибута @displayName.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13866')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'INT'][not(@nullFlavor)]"
                  priority="19"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13887']">
            <schxslt:rule pattern="d13e13887">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'INT'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'INT'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13887">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'INT'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='INT', должен иметь не пустое
                значение атрибута @value.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13887')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'TS'][not(@nullFlavor)]"
                  priority="18"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13896']">
            <schxslt:rule pattern="d13e13896">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'TS'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'TS'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13896">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'TS'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@value != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='TS', должен иметь не пустое
                значение атрибута @value.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(@value, '^[1-2]{1}[0-9]{3}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13896')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)]"
                  priority="17"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13911']">
            <schxslt:rule pattern="d13e13911">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13911">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(count(low)&lt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(low)&lt;= 1</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='IVL_TS', обязан
                иметь 1 элемент low.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(count(high)&lt;= 1)">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">count(high)&lt;= 1</xsl:attribute>
                     <svrl:text>Элемент, содержащий @xsi:type='IVL_TS', обязан
                иметь 1 элемент high.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13911')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)][high][low]"
                  priority="16"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13923']">
            <schxslt:rule pattern="d13e13923">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)][high][low]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)][high][low]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13923">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">//*[@xsi:type = 'IVL_TS'][not(@nullFlavor)][high][low]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(low[not(@nullFlavor)]/@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">low[not(@nullFlavor)]/@value != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий
                @xsi:type='IVL_TS', должен иметь не пустое значение атрибута low/@value.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(low[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(high[not(@nullFlavor)]/@value != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">high[not(@nullFlavor)]/@value != ''</xsl:attribute>
                     <svrl:text>Элемент, содержащий
                @xsi:type='IVL_TS', должен иметь не пустое значение атрибута high/@value.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="not(matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$'))">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$') or matches(high[not(@nullFlavor)]/@value, '^[1-2]{1}[0-9]{3}[0-1]{1}[0-9]{1}[0-3]{1}[0-9]{1}[0-2]{1}[0-9]{1}[0-5]{1}[0-9]{1}[0-5]{1}[0-9]{1}\+[0-2]{1}[0-9]{1}[0-5]{1}[0]{1}$')</xsl:attribute>
                     <svrl:text>Дата должна соответствовать формату "YYYYMMDDHHmmSS +| ZZZZ", где "YYYY" – год,
                "ММ" – месяц, "HH" - часы, "mm" - минуты, "SS" - секунды, " +| ZZZZ" - указатель
                временной зоны.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13923')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['8', '9', '10', '11', '12']]"
                  priority="15"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13943']">
            <schxslt:rule pattern="d13e13943">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['8', '9', '10', '11', '12']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['8', '9', '10', '11', '12']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13943">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['8', '9', '10', '11', '12']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/@nullFlavor = ['NA', 'NAV'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/@nullFlavor = ['NA', 'NAV']</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo должен иметь значение
                атрибута @nullFlavor равное 'NA' или 'NAV'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13943')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '1']"
                  priority="14"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13952']">
            <schxslt:rule pattern="d13e13952">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '1']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '1']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13952">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '1']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:IdentityDocType/@code = '1')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:IdentityDocType/@code = '1'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:IdentityDocType
                должен иметь значение атрибута @code равное '1'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13952')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '3']"
                  priority="13"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13961']">
            <schxslt:rule pattern="d13e13961">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '3']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '3']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13961">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = '3']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:IdentityDocType/@code = '2')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:IdentityDocType/@code = '2'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:IdentityDocType
                должен иметь значение атрибута @code равное '2'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13961')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = ['4', '5', '6']]"
                  priority="12"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13971']">
            <schxslt:rule pattern="d13e13971">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = ['4', '5', '6']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = ['4', '5', '6']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13971">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:IdentityDocType][code/@code = ['4', '5', '6']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:IdentityDocType/@code = '3')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:IdentityDocType/@code = '3'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:IdentityDocType
                должен иметь значение атрибута @code равное '3'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13971')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType/@nullFlavor][identity:DocInfo/identity:IdentityDocType/@code = '1']"
                  priority="11"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13980']">
            <schxslt:rule pattern="d13e13980">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType/@nullFlavor][identity:DocInfo/identity:IdentityDocType/@code = '1']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType/@nullFlavor][identity:DocInfo/identity:IdentityDocType/@code = '1']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13980">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType/@nullFlavor][identity:DocInfo/identity:IdentityDocType/@code = '1']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:InsurancePolicyType
                должен иметь значение атрибута @nullFlavor равное 'NAV'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13980')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType][identity:DocInfo/identity:IdentityDocType/@code = ['2', '3']]"
                  priority="10"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13989']">
            <schxslt:rule pattern="d13e13989">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType][identity:DocInfo/identity:IdentityDocType/@code = ['2', '3']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType][identity:DocInfo/identity:IdentityDocType/@code = ['2', '3']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13989">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:InsurancePolicyType][identity:DocInfo/identity:IdentityDocType/@code = ['2', '3']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NA')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NA'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:InsurancePolicyType
                должен иметь значение атрибута @nullFlavor равное 'NA'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13989')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = '1']"
                  priority="9"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e13998']">
            <schxslt:rule pattern="d13e13998">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = '1']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = '1']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e13998">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = '1']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:Series != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Series != ''</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Series
                должен иметь не пустое значение.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="identity:DocInfo/identity:Series/@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Series/@nullFlavor</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Series не
                должен иметь атрибут @nullFlavor.</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e13998')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = ['2', '3', '4']]"
                  priority="8"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14010']">
            <schxslt:rule pattern="d13e14010">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = ['2', '3', '4']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = ['2', '3', '4']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14010">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@code = ['2', '3', '4']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:Series/@nullFlavor = 'NA')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Series/@nullFlavor = 'NA'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Series
                должен иметь значение атрибута @nullFlavor равное 'NA'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14010')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']"
                  priority="7"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14019']">
            <schxslt:rule pattern="d13e14019">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14019">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:Series/@nullFlavor = 'NAV')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Series/@nullFlavor = 'NAV'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Series
                должен иметь значение атрибута @nullFlavor равное 'NAV'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14019')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series[not(@nullFlavor)]][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NA']"
                  priority="6"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14029']">
            <schxslt:rule pattern="d13e14029">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series[not(@nullFlavor)]][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NA']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series[not(@nullFlavor)]][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NA']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14029">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Series[not(@nullFlavor)]][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NA']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:Series != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Series != ''</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Series
                должен иметь не пустое значение.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14029')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']"
                  priority="5"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14038']">
            <schxslt:rule pattern="d13e14038">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14038">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:Number/@nullFlavor = 'NAV')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Number/@nullFlavor = 'NAV'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Number
                должен иметь значение атрибута @nullFlavor равное 'NAV'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14038')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor = 'NAV')]]"
                  priority="4"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14047']">
            <schxslt:rule pattern="d13e14047">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor = 'NAV')]]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor = 'NAV')]]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14047">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:Number][identity:DocInfo/identity:InsurancePolicyType[not(@nullFlavor = 'NAV')]]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:Number != '')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Number != ''</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Number
                должен иметь не пустое значение.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
               <xsl:if test="identity:DocInfo/identity:Number/@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:Number/@nullFlavor</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:Number не
                должен иметь атрибут @nullFlavor.</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14047')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']"
                  priority="3"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14059']">
            <schxslt:rule pattern="d13e14059">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14059">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime][identity:DocInfo/identity:InsurancePolicyType/@nullFlavor = 'NAV']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:effectiveTime/@nullFlavor = ['NAV', 'NASK'])">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:effectiveTime/@nullFlavor = ['NAV', 'NASK']</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:effectiveTime
                должен иметь значение атрибута @nullFlavor равное 'NAV' или 'NASK'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14059')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime/identity:high][identity:DocInfo/identity:InsurancePolicyType/@code = '2']"
                  priority="2"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14068']">
            <schxslt:rule pattern="d13e14068">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime/identity:high][identity:DocInfo/identity:InsurancePolicyType/@code = '2']" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime/identity:high][identity:DocInfo/identity:InsurancePolicyType/@code = '2']</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14068">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo/identity:effectiveTime/identity:high][identity:DocInfo/identity:InsurancePolicyType/@code = '2']</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(identity:DocInfo/identity:effectiveTime/identity:high/@nullFlavor = 'NAV')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/identity:effectiveTime/identity:high/@nullFlavor = 'NAV'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo/identity:effectiveTime/identity:high
                должен иметь значение атрибута @nullFlavor равное 'NAV'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14068')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[@nullFlavor]"
                  priority="1"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14077']">
            <schxslt:rule pattern="d13e14077">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[@nullFlavor]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[@nullFlavor]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14077">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity/scopingOrganization/id[@nullFlavor]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="not(@nullFlavor = 'NA')">
                  <svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                       location="{schxslt:location(.)}">
                     <xsl:attribute name="test">@nullFlavor = 'NA'</xsl:attribute>
                     <svrl:text>Main07-1. Элемент
                ClinicalDocument/participant/associatedEntity/scopingOrganization/id должен иметь
                значение атрибута @nullFlavor равное 'NA'.</svrl:text>
                  </svrl:failed-assert>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14077')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:template match="ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['1', '3', '4', '5', '6']]"
                  priority="0"
                  mode="d13e13">
      <xsl:param name="schxslt:patterns-matched" as="xs:string*"/>
      <xsl:choose>
         <xsl:when test="$schxslt:patterns-matched[. = 'd13e14089']">
            <schxslt:rule pattern="d13e14089">
               <xsl:comment xmlns:svrl="http://purl.oclc.org/dsdl/svrl">WARNING: Rule for context "ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['1', '3', '4', '5', '6']]" shadowed by preceding rule</xsl:comment>
               <svrl:suppressed-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['1', '3', '4', '5', '6']]</xsl:attribute>
               </svrl:suppressed-rule>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="$schxslt:patterns-matched"/>
            </xsl:next-match>
         </xsl:when>
         <xsl:otherwise>
            <schxslt:rule pattern="d13e14089">
               <svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl">
                  <xsl:attribute name="context">ClinicalDocument/participant[@typeCode = 'IND']/associatedEntity[identity:DocInfo][code/@code = ['1', '3', '4', '5', '6']]</xsl:attribute>
               </svrl:fired-rule>
               <xsl:if test="identity:DocInfo/@nullFlavor">
                  <svrl:successful-report xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                           location="{schxslt:location(.)}">
                     <xsl:attribute name="test">identity:DocInfo/@nullFlavor</xsl:attribute>
                     <svrl:text> Элемент
                ClinicalDocument/participant/associatedEntity/identity:DocInfo не должен иметь 
                атрибут @nullFlavor при указании данного типа источника оплаты в соответствии с Таблицей "Обязательность заполнения элементов в зависимости от источника оплаты", представленной в руководстве по реализации в разделе "Сведения об источнике оплаты".</svrl:text>
                  </svrl:successful-report>
               </xsl:if>
            </schxslt:rule>
            <xsl:next-match>
               <xsl:with-param name="schxslt:patterns-matched"
                                as="xs:string*"
                                select="($schxslt:patterns-matched, 'd13e14089')"/>
            </xsl:next-match>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>
   <xsl:function name="schxslt:location" as="xs:string">
      <xsl:param name="node" as="node()"/>
      <xsl:variable name="segments" as="xs:string*">
         <xsl:for-each select="($node/ancestor-or-self::node())">
            <xsl:variable name="position">
               <xsl:number level="single"/>
            </xsl:variable>
            <xsl:choose>
               <xsl:when test=". instance of element()">
                  <xsl:value-of select="concat('Q{', namespace-uri(.), '}', local-name(.), '[', $position, ']')"/>
               </xsl:when>
               <xsl:when test=". instance of attribute()">
                  <xsl:value-of select="concat('@Q{', namespace-uri(.), '}', local-name(.))"/>
               </xsl:when>
               <xsl:when test=". instance of processing-instruction()">
                  <xsl:value-of select="concat('processing-instruction(&#34;', name(.), '&#34;)[', $position, ']')"/>
               </xsl:when>
               <xsl:when test=". instance of comment()">
                  <xsl:value-of select="concat('comment()[', $position, ']')"/>
               </xsl:when>
               <xsl:when test=". instance of text()">
                  <xsl:value-of select="concat('text()[', $position, ']')"/>
               </xsl:when>
               <xsl:otherwise/>
            </xsl:choose>
         </xsl:for-each>
      </xsl:variable>
      <xsl:value-of select="concat('/', string-join($segments, '/'))"/>
   </xsl:function>
</xsl:transform>
